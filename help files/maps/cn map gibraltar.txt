settings
{
	main
	{
		Description: "GENJI PARKOUR EASY"
		Mode Name: "GENJI PARKOUR EASY"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Match Voice Chat: Enabled
		Max Spectators: 3
		Max Team 1 Players: 12
		Max Team 2 Players: 0
		Swap Teams After Match: No
	}

	modes
	{
		Hybrid
		{
			enabled maps
			{
			}
		}

		Skirmish
		{
			enabled maps
			{
				Watchpoint: Gibraltar 0
			}
		}

		disabled Team Deathmatch
		{
			Game Length In Minutes: 15
			Mercy Resurrect Counteracts Kills: Off
			Self Initiated Respawn: Off
		}

		General
		{
			Allow Hero Switching: Off
			Enemy Health Bars: Off
			Game Mode Start: Manual
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Respawn Time Scalar: 0%
			Spawn Health Packs: Disabled
		}
	}

	heroes
	{
		General
		{
			D.Va
			{
				Spawn With Ultimate Ready: On
				Spawn Without Mech: On
			}

			Genji
			{
				Deflect: Off
				No Ammunition Requirement: On
				Spawn With Ultimate Ready: On
				Swift Strike Cooldown Time: 0%
				Ultimate Duration: 25%
				Ultimate Generation - Passive Dragonblade: 500%
				Ultimate Generation Dragonblade: 500%
			}

			enabled heroes
			{
				Genji
			}
		}
	}
}

variables
{
	global:
		3: DVA
		4: dva
		12: Dao
		13: SHIFT
		14: SUPERJUMP
		18: TQ
		19: TQ1
		20: TQ2
		21: TQ3
		22: EditMode
		23: TQ5
		24: TQ6
		25: kz_xs
		26: killballnumber
		27: pinballnumber
		28: deathjump
		30: save
		32: toplistPlayers
		33: toplistTimes
		34: toplistSortedTimes
		35: kaxiaotiao
		38: NANBA

	player:
		12: ztjs
		26: TY
		31: quick_restart
		44: paqiang
}

subroutines
{
	3: KILLBALL
	4: pinball
}

disabled rule("防查看器崩溃（作图时开启，比赛时关闭）")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Inspector Recording;
		Wait(10, Ignore Condition);
		Enable Inspector Recording;
		Loop;
	}
}

rule("清爽模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Melee)) == True;
		Event Player == Host Player;
		Event Player.E >= 1;
	}

	actions
	{
		Wait(0.800, Abort When False);
		Play Effect(Host Player, Buff Impact Sound, Color(White), Event Player, 100);
		If(Event Player.K == 1);
			Event Player.K = 2;
			Small Message(All Players(All Teams), String(""));
		Else;
			Event Player.K = 1;
			Small Message(All Players(All Teams), String(""));
		End;
	}
}

disabled rule("清空多余数据")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Global.B = 0;
		Global.C = 0;
		Global.DVA = 0;
		Global.dva = 0;
		Global.F = 0;
		Global.G = 0;
		Global.J = 0;
		Global.K = 0;
		Global.L = 0;
		Global.Dao = 0;
		Global.SHIFT = 0;
		Global.SUPERJUMP = 0;
		Global.P = 0;
		Global.Q = 0;
		Global.R = 0;
		Global.TQ1 = 0;
		Global.NANBA = 0;
		Global.TQ2 = 0;
		Global.TQ3 = 0;
		Global.save = 0;
		Global.kz_xs = 0;
		Big Message(All Players(All Teams), String(""));
		Big Message(All Players(All Teams), String(""));
		Enable Inspector Recording;
	}
}

disabled rule("穿墙")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Event Player.E == 1;
	}

	actions
	{
		Teleport(Event Player, Position Of(Event Player) + Facing Direction Of(Event Player) * 3);
	}
}

disabled rule("修改编辑模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Wait(1, Abort When False);
		If(Event Player.E == 1);
			Event Player.E = 2;
			Small Message(Host Player, String(""));
		Else If(Event Player.E == 2);
			Event Player.E = 3;
			Small Message(Host Player, String(""));
		Else If(Event Player.E == 3);
			Event Player.E = 1;
			Small Message(Host Player, String(""));
		End;
	}
}

disabled rule("修改球体大小/增大")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			If(Count Of(Global.H) > 0);
				Global.I[Global.J] += 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
			End;
		Else If(Event Player.E == 3);
			If(Count Of(Global.TQ) > 0);
				Global.EditMode[Global.TQ1] += 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
			End;
		End;
	}
}

disabled rule("修改球体大小/缩小")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
		Is Button Held(Event Player, Button(Interact)) == False;
	}

	actions
	{
		If(Count Of(Global.H) > 0);
			If(Event Player.E == 2);
				Global.I[Global.J] -= 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
			End;
		End;
	}
}

disabled rule("弹球弹力减小")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Is Button Held(Event Player, Button(Interact)) == False;
	}

	actions
	{
		If(Count Of(Global.TQ) > 0);
			Global.EditMode[Global.TQ1] -= 0.100;
			Wait(0.100, Ignore Condition);
			Loop If Condition Is True;
		End;
	}
}

disabled rule("移动球体/往面朝方向")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			Skip If(Global.L != Global.H[Global.J], 1);
			Chase Global Variable At Rate(L, Eye Position(Event Player) + Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.H[Global.J]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(L);
			Global.H[Global.J] = Global.L;
			For Global Variable(NANBA, 0, Count Of(Global.H), 1);
				Destroy Effect(Global.K[Global.NANBA]);
			End;
			Global.K = Empty Array;
			Call Subroutine(KILLBALL);
		Else If(Event Player.E == 3);
			Skip If(Global.TQ3 != Global.TQ[Global.TQ1], 1);
			Chase Global Variable At Rate(TQ3, Eye Position(Event Player) + Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.TQ[Global.TQ1]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(TQ3);
			Global.TQ[Global.TQ1] = Global.TQ3;
			For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
				Destroy Effect(Global.TQ2[Global.NANBA]);
			End;
			Global.TQ2 = Empty Array;
			Call Subroutine(pinball);
		End;
	}
}

disabled rule("移动球体/往身后方向")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			Skip If(Global.L != Global.H[Global.J], 1);
			Chase Global Variable At Rate(L, Eye Position(Event Player) - Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.H[Global.J]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(L);
			Global.H[Global.J] = Global.L;
			For Global Variable(NANBA, 0, Count Of(Global.H), 1);
				Destroy Effect(Global.K[Global.NANBA]);
			End;
			Global.K = Empty Array;
			Call Subroutine(KILLBALL);
		Else If(Event Player.E == 3);
			Skip If(Global.TQ3 != Global.TQ[Global.TQ1], 1);
			Chase Global Variable At Rate(TQ3, Eye Position(Event Player) - Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.TQ[Global.TQ1]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(TQ3);
			Global.TQ[Global.TQ1] = Global.TQ3;
			For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
				Destroy Effect(Global.TQ2[Global.NANBA]);
			End;
			Global.TQ2 = Empty Array;
			Call Subroutine(pinball);
		End;
	}
}

disabled rule("编辑模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Event Player.E = 1;
		Event Player.K = 1;
	}
}

disabled rule("创建点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Modify Global Variable(A, Append To Array, Position Of(Event Player) - Vector(0, 0, 0));
			Global.B = Count Of(Global.A) - 1;
			Small Message(All Players(All Teams), String(""));
		Else If(Event Player.E == 2);
			If(Event Player.A == 0);
				Big Message(All Players(All Teams), String(""));
			Else;
				Modify Global Variable(H, Append To Array, Position Of(Event Player));
				Modify Global Variable(killballnumber, Append To Array, Event Player.A);
				Global.J = Count Of(Global.H) - 1;
				Global.I[Global.J] = 5;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
				Global.L = Global.H[Global.J];
				Big Message(All Players(All Teams), String("", Event Player.A));
			End;
		Else If(Event Player.E == 3);
			If(Event Player.A == 0);
				Big Message(All Players(All Teams), String(""));
			Else;
				Modify Global Variable(TQ, Append To Array, Position Of(Event Player));
				Global.TQ1 = Count Of(Global.TQ) - 1;
				Global.EditMode[Global.TQ1] = 10;
				Global.TQ5[Global.TQ1] = False;
				Global.TQ6[Global.TQ1] = False;
				For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
					Destroy Effect(Global.TQ2[Global.NANBA]);
				End;
				Global.TQ2 = Empty Array;
				Call Subroutine(pinball);
				Global.TQ3 = Global.TQ[Global.TQ1];
				Modify Global Variable(pinballnumber, Append To Array, Event Player.A);
				Big Message(All Players(All Teams), String("", Event Player.A));
			End;
	}
}

disabled rule("删除点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Modify Global Variable(A, Remove From Array By Index, Global.B);
			Modify Global Variable(C, Remove From Array By Index, Global.B);
			Skip If(Global.B <= 0, 1);
			Global.B -= 1;
			Small Message(All Players(All Teams), String(""));
		Else If(Event Player.E == 2 && Count Of(Global.H) != 0);
			Modify Global Variable(H, Remove From Array By Index, Global.J);
			Modify Global Variable(I, Remove From Array By Index, Global.J);
			Modify Global Variable(killballnumber, Remove From Array By Index, Global.J);
			Destroy Effect(Global.K[Global.J]);
			Modify Global Variable(K, Remove From Array By Index, Global.J);
			Skip If(Global.J <= 0, 1);
			Global.J -= 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3 && Count Of(Global.TQ) != 0);
			Modify Global Variable(TQ, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(EditMode, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(TQ5, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(TQ6, Remove From Array By Index, Global.TQ1);
			Destroy Effect(Global.TQ2[Global.TQ1]);
			Modify Global Variable(TQ2, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(pinballnumber, Remove From Array By Index, Global.TQ1);
			Skip If(Global.TQ1 <= 0, 1);
			Global.TQ1 -= 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
		End;
	}
}

disabled rule("修改点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Small Message(All Players(All Teams), Count Of(Global.A[Global.B]) != 0 ? String("", Global.B) : String(""));
		Global.A[Global.B] = Position Of(Event Player) - Vector(0, 0, 0);
		Small Message(All Players(All Teams), String(""));
	}
}

disabled rule("添加传送点")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		(Is Button Held(Host Player, Button(Interact)) && Is Button Held(Host Player, Button(Reload))) == True;
		Count Of(Global.A) > 1;
		Host Player.E == 1;
		Global.B > 0;
		Is Button Held(Host Player, Button(Melee)) == False;
	}

	actions
	{
		Abort If(Is Button Held(Host Player, Button(Melee)) == True);
		Global.A[Global.B] = Array(Count Of(Global.A[Global.B]) != 0 ? Global.A[Global.B][0] : Global.A[Global.B], Position Of(
			Host Player));
		Small Message(All Players(All Teams), String("", Global.B));
	}
}

disabled rule("移动选中点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Skip If(Global.B <= 0, 1);
			Global.B -= 1;
		Else If(Event Player.E == 2);
			Skip If(Global.J <= 0, 2);
			Global.J -= 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3);
			Skip If(Global.TQ1 <= 0, 2);
			Global.TQ1 -= 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
		End;
	}
}

disabled rule("移动选中点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Skip If(Global.B == Count Of(Global.A) - 1, 1);
			Global.B += 1;
		Else If(Event Player.E == 2);
			Skip If(Global.J == Count Of(Global.H) - 1, 2);
			Global.J += 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3);
			Skip If(Global.TQ1 == Count Of(Global.TQ) - 1, 2);
			Global.TQ1 += 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
	}
}

disabled rule("弹球启用关闭终极技能")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Is Button Held(Event Player, Button(Ultimate)) && Is Button Held(Event Player, Button(Primary Fire))) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Count Of(Global.TQ) != 0;
	}

	actions
	{
		Wait(1, Ignore Condition);
		If(Global.TQ5[Global.TQ1] == False);
			Global.TQ5[Global.TQ1] = True;
		Else If(Global.TQ5[Global.TQ1] == True);
			Global.TQ5[Global.TQ1] = False;
		End;
	}
}

disabled rule("弹球启用关闭技能1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Is Button Held(Event Player, Button(Secondary Fire)) && Is Button Held(Event Player, Button(Ultimate))) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Count Of(Global.TQ) != 0;
	}

	actions
	{
		Wait(1, Ignore Condition);
		If(Global.TQ6[Global.TQ1] == False);
			Global.TQ6[Global.TQ1] = True;
		Else If(Global.TQ6[Global.TQ1] == True);
			Global.TQ6[Global.TQ1] = False;
		End;
	}
}

disabled rule("指引类文本【操作指引】")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, String("", Host Player.K, Append To Array(Append To Array(Append To Array(
			Append To Array(Empty Array, 0), String("")), String("")), String(""))[Host Player.E], String("")), Right, -3, Color(White),
			Color(White), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String("", Host Player.K, String(""), String("")), Right, -2, Color(White),
			Color(White), Color(Green), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String("", Host Player.K, String(""), String("")), Right, -1, Color(White),
			Color(White), Color(Red), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String("", Host Player.K, String(""), String("")), Top, -3, Color(White),
			Color(White), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), String("", Host Player.K, Append To Array(Append To Array(Append To Array(Append To Array(
			Empty Array, 0), String("")), String("")), String(""))[Host Player.E], String("")), Null, Append To Array(Append To Array(
			Append To Array(Append To Array(Empty Array, String("")), String("")), String("")), String(""))[Host Player.E], Left, -6,
			Color(Red), Color(White), Color(Orange), Visible To and String, Default Visibility);
	}
}

disabled rule("指引类文本、效果【包含点位显示】")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Icon(All Players(All Teams), Global.A[Global.B] + Vector(0, 0.600, 0), Arrow: Down, Visible To and Position, Color(Red),
			True);
		Create In-World Text(All Players(All Teams), String(""), Global.A[Global.B] + Vector(0, 0.500, 0), 1.600, Do Not Clip,
			Visible To Position and String, Color(Red), Default Visibility);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Red), Global.H[Global.J], Global.I[Global.J], Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Global.TQ[Global.TQ1], 1, Visible To Position and Radius);
		Create HUD Text(All Players(All Teams), Append To Array(Append To Array(Append To Array(Append To Array(Empty Array, 0), String("",
			Global.B)), String("", Global.I[Global.J])), String("", Global.EditMode[Global.TQ1]))[Host Player.E], Null, Append To Array(
			Append To Array(Append To Array(Append To Array(Empty Array, String("")), String("")), String("")), String("",
			Global.TQ5[Global.TQ1], Global.TQ6[Global.TQ1]))[Host Player.E], Top, -6, Color(Red), Color(White), Color(Orange),
			Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), String(""), Global.H[Global.J], 1.600, Do Not Clip, Visible To Position and String,
			Color(Sky Blue), Default Visibility);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.L, 1, Visible To Position and Radius);
		Create In-World Text(Host Player, String("{0} m", Distance Between(Host Player, Global.L)), Global.L - Vector(0, 1.500, 0), 1.500,
			Do Not Clip, Visible To Position and String, Color(Red), Default Visibility);
		Create Icon(All Players(All Teams), Global.H[Global.J] + Vector(0, 0.600, 0), Arrow: Down, Visible To and Position, Color(Red),
			True);
	}
}

disabled rule("清除所有点位显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Event Player == Host Player;
	}

	actions
	{
		For Global Variable(B, Count Of(Global.C) - 1, 0, -1);
			Destroy Effect(Global.C[Global.B]);
			Modify Global Variable(C, Remove From Array By Index, Global.B);
		End;
		Global.B = -2;
	}
}

disabled rule("显示所有点位")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.B == -2;
	}

	actions
	{
		For Global Variable(B, 0, Count Of(Global.A), 1);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.A[Global.B], 1, Visible To);
			Modify Global Variable(C, Append To Array, Last Created Entity);
		End;
	}
}

rule("跳关")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.A += 1;
		Teleport(Event Player, Global.A[Event Player.A]);
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A - 1, Remove From Array By Value, Event Player);
	}
}

rule("退关")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player.A != 0;
	}

	actions
	{
		Teleport(Event Player, Global.A[Event Player.A - 1]);
		Event Player.A -= 1;
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A + 1, Remove From Array By Value, Event Player);
	}
}

rule("------------------------------------------------------以上规则正式比赛时关闭------------------------------------------------------")
{
	event
	{
		Ongoing - Global;
	}
}

rule("全局设置")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Inspector Recording;
		Disable Built-In Game Mode Respawning(All Players(All Teams));
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Music;
		Pause Match Time;
		Global.Dao = Empty Array;
		Global.SHIFT = Empty Array;
		Global.pinballnumber = Empty Array;
		Global.killballnumber = Empty Array;
		Global.A = Empty Array;
		Global.F = Empty Array;
		Global.G = Empty Array;
		Global.H = Empty Array;
		Global.I = Empty Array;
		Global.K = Empty Array;
		Global.J = 0;
		Global.Q = Empty Array;
		Global.TQ = Empty Array;
		Global.TQ2 = Empty Array;
		Global.EditMode = Empty Array;
		Global.TQ1 = 0;
		Global.TQ5 = Empty Array;
		Global.TQ6 = Empty Array;
		Wait(1, Ignore Condition);
		Global.B = Count Of(Global.A) - 1;
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Top, -1, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Call Subroutine(KILLBALL);
		Wait(2, Ignore Condition);
		Call Subroutine(pinball);
		If(Current Game Mode == Game Mode(Skirmish));
			Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", String Slice(String("Remain"), 0, 1),
				String Slice(String("Remain"), 1, 1)), String("{0} {1}", String Slice(String("Time"), 0, 1), String Slice(String("Time"), 1,
				1)), String("{0} {1} {2}", String(""), 270 - Round To Integer(Total Time Elapsed / 60, Down), String Slice(String("Score"), 0,
				1))), Right, -20, Color(White), Color(White), Color(Red), Visible To and String, Default Visibility);
		Else If(Current Game Mode == Game Mode(Hybrid));
			Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", String Slice(String("Remain"), 0, 1),
				String Slice(String("Remain"), 1, 1)), String("{0} {1}", String Slice(String("Time"), 0, 1), String Slice(String("Time"), 1,
				1)), String("{0} {1} {2}", String(""), 270 - Round To Integer(Total Time Elapsed / 60, Down), String Slice(String("Score"), 0,
				1))), Right, -20, Color(White), Color(White), Color(Red), Visible To and String, Default Visibility);
		Else;
			Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", String Slice(String("Remain"), 0, 1),
				String Slice(String("Remain"), 1, 1)), String("{0} {1}", String Slice(String("Time"), 0, 1), String Slice(String("Time"), 1,
				1)), String("{0} {1} {2}", String(""), 90 - Round To Integer(Total Time Elapsed / 60, Down), String Slice(String("Score"), 0,
				1))), Right, -20, Color(White), Color(White), Color(Red), Visible To and String, Default Visibility);
		Else;
		End;
		Global.save = Empty Array;
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Right, -8, Color(White), Color(White), Color(White),
			String and Color, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[1] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[1])], String("{0} sec",
			Global.toplistSortedTimes[1])), Left, -7, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[2] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[2])], String("{0} sec",
			Global.toplistSortedTimes[2])), Left, -6, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[3] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[3])], String("{0} sec",
			Global.toplistSortedTimes[3])), Left, -5, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[4] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[4])], String("{0} sec",
			Global.toplistSortedTimes[4])), Left, -4, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[5] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[5])], String("{0} sec",
			Global.toplistSortedTimes[5])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[6] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[6])], String("{0} sec",
			Global.toplistSortedTimes[6])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[7] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[7])], String("{0} sec",
			Global.toplistSortedTimes[7])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[8] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[8])], String("{0} sec",
			Global.toplistSortedTimes[8])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[9] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[9])], String("{0} sec",
			Global.toplistSortedTimes[9])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[10] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[10])], String("{0} sec",
			Global.toplistSortedTimes[10])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[11] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[11])], String("{0} sec",
			Global.toplistSortedTimes[11])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[12] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[12])], String("{0} sec",
			Global.toplistSortedTimes[12])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[13] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[13])], String("{0} sec",
			Global.toplistSortedTimes[13])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[14] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[14])], String("{0} sec",
			Global.toplistSortedTimes[14])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[15] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[15])], String("{0} sec",
			Global.toplistSortedTimes[15])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[16] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[16])], String("{0} sec",
			Global.toplistSortedTimes[16])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[17] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[17])], String("{0} sec",
			Global.toplistSortedTimes[17])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[18] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[18])], String("{0} sec",
			Global.toplistSortedTimes[18])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[19] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[19])], String("{0} sec",
			Global.toplistSortedTimes[19])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[20] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[20])], String("{0} sec",
			Global.toplistSortedTimes[20])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[21] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[21])], String("{0} sec",
			Global.toplistSortedTimes[21])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[22] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[22])], String("{0} sec",
			Global.toplistSortedTimes[22])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[23] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[23])], String("{0} sec",
			Global.toplistSortedTimes[23])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[24] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[24])], String("{0} sec",
			Global.toplistSortedTimes[24])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[25] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[25])], String("{0} sec",
			Global.toplistSortedTimes[25])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[26] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[26])], String("{0} sec",
			Global.toplistSortedTimes[26])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[27] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[27])], String("{0} sec",
			Global.toplistSortedTimes[27])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[28] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[28])], String("{0} sec",
			Global.toplistSortedTimes[28])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[29] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[29])], String("{0} sec",
			Global.toplistSortedTimes[29])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[30] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[30])], String("{0} sec",
			Global.toplistSortedTimes[30])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[31] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[31])], String("{0} sec",
			Global.toplistSortedTimes[31])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[32] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[32])], String("{0} sec",
			Global.toplistSortedTimes[32])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[33] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[33])], String("{0} sec",
			Global.toplistSortedTimes[33])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[34] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[34])], String("{0} sec",
			Global.toplistSortedTimes[34])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[35] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[35])], String("{0} sec",
			Global.toplistSortedTimes[35])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[36] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[36])], String("{0} sec",
			Global.toplistSortedTimes[36])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[37] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[37])], String("{0} sec",
			Global.toplistSortedTimes[37])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[38] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[38])], String("{0} sec",
			Global.toplistSortedTimes[38])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[39] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[39])], String("{0} sec",
			Global.toplistSortedTimes[39])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[40] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[40])], String("{0} sec",
			Global.toplistSortedTimes[40])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[41] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[41])], String("{0} sec",
			Global.toplistSortedTimes[41])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[42] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[42])], String("{0} sec",
			Global.toplistSortedTimes[42])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[43] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[43])], String("{0} sec",
			Global.toplistSortedTimes[43])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[44] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[44])], String("{0} sec",
			Global.toplistSortedTimes[44])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[45] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[45])], String("{0} sec",
			Global.toplistSortedTimes[45])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[46] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[46])], String("{0} sec",
			Global.toplistSortedTimes[46])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[47] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[47])], String("{0} sec",
			Global.toplistSortedTimes[47])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[48] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[48])], String("{0} sec",
			Global.toplistSortedTimes[48])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[49] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[49])], String("{0} sec",
			Global.toplistSortedTimes[49])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(Global.toplistSortedTimes[50] != Null ? All Players(All Teams) : Null, Null, Null, String("{0} {1}",
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[50])], String("{0} sec",
			Global.toplistSortedTimes[50])), Left, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(
			158, 255, 187, 255), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Right, -2, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Null, Null, String(""), Left, -2, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Right, -10, Color(White), Color(White), Color(White), Visible To,
			Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Left, 0, Color(White), Color(White), Color(Yellow),
			Visible To and String, Default Visibility);
	}
}

rule("【子程序】-【点位效果】")
{
	event
	{
		Subroutine;
		Sub0;
	}

	actions
	{
		Create Effect(Event Player, Ring, Color(Sky Blue), Count Of(Global.A[Event Player.A])
			!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], 1, Visible To Position and Radius);
		Event Player.B[0] = Last Created Entity;
		Create Effect(Event Player, Ring, Color(Lime Green), Global.A[Event Player.A + 1], 1, Visible To Position and Radius);
		Event Player.B[1] = Last Created Entity;
		Create Effect(Event Player, Light Shaft, Color(White), Global.A[Event Player.A + 1], 1, Visible To Position and Radius);
		Event Player.B[2] = Last Created Entity;
		Create Icon(Event Player, Global.A[Event Player.A + 1] + Vector(0, 1, 0), Arrow: Down, Visible To and Position, Color(Sky Blue),
			True);
		Event Player.B[3] = Last Created Entity;
		Create In-World Text(Event Player, String("Come Here", Global.kz_xs ? String("", 5 - Event Player.L) : String("")),
			Global.A[Event Player.A + 1], 1.500, Do Not Clip, Visible To Position and String, Color(Red), Default Visibility);
		Event Player.B[4] = Last Text ID;
	}
}

rule("【子程序】-【开始游戏】")
{
	event
	{
		Subroutine;
		Sub1;
	}

	actions
	{
		Skip If(Count Of(Global.A) == 0, 6);
		If(Array Contains(Global.save, String("{0} {1}", Event Player)) == True);
			Event Player.A = Global.save[Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1];
			Event Player.D = Global.save[Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 2];
			Teleport(Event Player, Global.A[Global.save[Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1]] + Vector(0, 1,
				0));
		Else;
			Teleport(Event Player, Global.A[0] + Vector(0, 1, 0));
			Event Player.A = 0;
			Event Player.D = 0;
			Modify Global Variable(save, Append To Array, Array(String("{0} {1}", Event Player), Event Player.A, Event Player.D));
		End;
		Chase Player Variable At Rate(Event Player, D, Absolute Value(9999999.000), 1, Destination and Rate);
		Event Player.G = 0;
		Event Player.H = Empty Array;
		If(Event Player.E < 1);
			Set Ability 1 Enabled(Event Player, False);
			Set Ultimate Ability Enabled(Event Player, False);
		Else;
			Set Ability 1 Enabled(Event Player, True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
		End;
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Event Player.C = 0;
	}
}

rule("【子程序】-【击杀球效果显示】")
{
	event
	{
		Subroutine;
		KILLBALL;
	}

	actions
	{
		Abort If(Global.H == Empty Array);
		Global.NANBA = 0;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[0]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 1;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[1]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 2;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[2]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 3;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[3]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 4;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[4]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 5;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[5]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 6;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[6]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 7;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[7]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 8;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[8]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 9;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[9]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 10;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[10]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 11;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[11]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 12;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[12]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 13;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[13]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 14;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[14]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 15;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[15]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 16;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[16]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 17;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[17]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 18;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[18]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 19;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[19]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 20;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[20]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 21;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[21]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 22;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[22]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 23;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[23]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 24;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[24]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 25;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[25]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 26;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[26]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 27;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[27]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 28;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[28]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 29;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[29]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 30;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[30]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 31;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[31]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 32;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[32]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 33;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[33]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 34;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[34]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 35;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[35]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 36;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[36]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 37;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[37]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 38;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[38]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 39;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[39]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 40;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[40]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 41;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[41]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 42;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[42]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 43;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[43]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 44;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[44]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 45;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[45]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 46;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[46]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 47;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[47]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 48;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[48]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 49;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[49]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 50;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[50]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
	}
}

rule("【子程序】-【弹球效果显示】")
{
	event
	{
		Subroutine;
		pinball;
	}

	actions
	{
		Abort If(Global.TQ == Empty Array);
		Global.NANBA = 0;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[0]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 1;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[1]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 2;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[2]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 3;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[3]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 4;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[4]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 5;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[5]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 6;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[6]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 7;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[7]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 8;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[8]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 9;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[9]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 10;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[10]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 11;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[11]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 12;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[12]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 13;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[13]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 14;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[14]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 15;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[15]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 16;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[16]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 17;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[17]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 18;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[18]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 19;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[19]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 20;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[20]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 21;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[21]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 22;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[22]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 23;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[23]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 24;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[24]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 25;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[25]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 26;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[26]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 27;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[27]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 28;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[28]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 29;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[29]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 30;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[30]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 31;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[31]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 32;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[32]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 33;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[33]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 34;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[34]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 35;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[35]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 36;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[36]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 37;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[37]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 38;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[38]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 39;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[39]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 40;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[40]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 41;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[41]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 42;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[42]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 43;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[43]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 44;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[44]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 45;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[45]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 46;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[46]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 47;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[47]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 48;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[48]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 49;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[49]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 50;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[50]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 51;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[51]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 52;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[52]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 53;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[53]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 54;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[54]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 55;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[55]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 56;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[56]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 57;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[57]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 58;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[58]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 59;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[59]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 60;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[60]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 61;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[61]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 62;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[62]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 63;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[63]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 64;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[64]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 65;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[65]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 66;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[66]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 67;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[67]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 68;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[68]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 69;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[69]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 70;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[70]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 71;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[71]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 72;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[72]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 73;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[73]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 74;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[74]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 75;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[75]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
	}
}

rule("数据录入---------------------------------------------------录入前先按 填装+互动+近战 清空多余数据再复制粘贴")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.A = Array(Vector(20.460, 6, -126.760), Vector(18.280, 7.140, -132.840), Vector(26.081, -2, -145.940), Vector(36.079, 5,
			-144.296), Vector(52.029, 1, -144.722), Vector(57.036, 1, -137.253), Vector(63.800, -3.300, -119.560), Vector(53.410, 3.560,
			-113.060), Vector(38.030, 4, -101.200), Vector(25.863, 3.013, -85.075), Vector(39.841, 3.038, -75.338), Vector(37.890, -2.134,
			-56.090), Vector(32.420, 3, -43.460), Vector(39.370, 3, -26.160), Vector(44.795, 3, -36.287), Vector(45.640, 4.920, -55.130),
			Vector(53.330, 3.340, -45.560), Vector(61.360, 3, -42.820), Vector(72.540, 3, -49.077), Vector(78.708, 3.678, -66.043), Vector(
			64.820, -3, -48.153), Vector(72.459, 3.045, -40.118), Vector(60.484, 2.028, -19.921), Vector(58.797, -0.481, -9.715), Vector(
			66.710, -2.990, -14.880), Vector(89.585, 1.402, -1.342), Vector(97.351, 1, 22.041), Vector(101.805, -0.942, 44.751), Vector(
			84.068, 5.857, 52.153), Vector(62.730, 1.030, 38.570), Vector(69.720, -6.980, 55.500), Vector(71.910, -9.980, 53.520), Vector(
			62.882, -9.976, 38.637), Vector(78.106, -9.040, 37.295), Vector(94.010, -5.660, 34.090), Vector(96.674, -2.977, 24.152),
			Vector(87.087, -0.942, 31.037), Vector(65.354, 9, 32.929), Vector(50.020, 9, 5.970), Vector(70.660, 9, 12.500), Vector(77.960,
			1.880, -11.490), Vector(83.412, 3.037, -31.828), Vector(61.164, -0.279, -27.452), Vector(41.391, -0.515, -49.228), Vector(
			18.660, 3, -63.250), Vector(26.562, 4, -89.312), Vector(37.222, 0, -113.031), Vector(20.819, -2, -129.218), Vector(30.300, 5,
			-149.850), Vector(18.280, 7.140, -132.840), Vector(20.460, 6, -126.760));
		Global.H = Array();
		Global.I = Array();
		Global.TQ = Array();
		Global.EditMode = Array();
		Global.TQ5 = Array();
		Global.TQ6 = Array();
		Global.killballnumber = Array();
		Global.pinballnumber = Array();
	}
}

rule("开局设置")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		If(Array Contains(Global.Q, Event Player) == False);
			Create HUD Text(Event Player, Event Player.J == 1 ? String("{0} {1}", String Slice(String("Disconnected"), 0, 1), String Slice(
				String("No Thanks"), 1, 1)) : String("{0} {1}", String Slice(String("Unknown"), 0, 1), String Slice(String("No Thanks"), 1,
				1)), Null, Null, Left, -30, Event Player.J == 1 ? Color(Rose) : Color(Blue), Color(Blue), Color(Blue), String and Color,
				Default Visibility);
			Create HUD Text(Event Player, Null, Null, String("{0} {1} {2}", String("{0}: {1}", String("Current Checkpoint"), String(
				"{0} / {1}", Event Player.A, Count Of(Global.A) - 1)), String("{0} - {1}", String(""), String("")), String("{0}: {1}", String(
				"Time"), String("{0} sec", Event Player.D))), Top, -4, Color(White), Color(White), Color(White), Visible To and String,
				Default Visibility);
			disabled Create HUD Text(Event Player, Null, String("{0} {1} {2}", String(""), String("{0} sec", Event Player.D), Global.kz_xs ? String("",
				Event Player.L) : String("")), Null, Top, -11, Color(White), Color(White), Color(White), Visible To and String,
				Default Visibility);
		End;
		Modify Global Variable(Q, Append To Array, Event Player);
		Call Subroutine(Sub1);
		Enable Death Spectate All Players(Event Player);
		Enable Death Spectate Target HUD(Event Player);
		Event Player.F = 0;
		Event Player.I = 2;
		Event Player.J = 2;
		Call Subroutine(Sub0);
		Disable Game Mode In-World UI(Event Player);
		Disable Game Mode HUD(Event Player);
		If(String("{0} {1}") == String("{0} {1}", Event Player));
			Remove Player(Event Player);
		End;
		Create HUD Text(Event Player, Null, Null, String("({0})"), Right, -19, Null, Null, Null, String and Color, Default Visibility);
		Create HUD Text(Event Player, Null, Null, String("({0})"), Left, -29, Null, Null, Null, String and Color, Default Visibility);
		Create HUD Text(Event Player, Null, String("{0} {1} {2}", String Slice(String("Die"), 0, 1), String Slice(String("Die"), 1, 1),
			String("{0} {1} {2}", String Slice(String("In View"), 1, 1), String Slice(String("Angle"), 0, 1), String("{0}: {1}", String(
			""), Input Binding String(Button(Interact))))), Null, Right, -9, Color(White), Color(White), Color(White), String and Color,
			Default Visibility);
		Create HUD Text(Event Player, Null, String("{0} {1} {2}", String Slice(String("Fastest"), 1, 1), String Slice(String("Speed"), 0,
			1), String("{0} {1} {2}", String Slice(String("Round"), 0, 1), String Slice(String("Checkpoint"), 2, 1), String("{0}: {1}",
			String(""), Input Binding String(Button(Reload))))), Null, Right, -10, Color(White), Color(White), Color(White),
			String and Color, Default Visibility);
		Create HUD Text(Event Player, Null, String("{0} {1} {2}", String Slice(String("Innocent"), 0, 1), String Slice(String("Enemy"), 0,
			1), String("{0} {1} {2}", String Slice(String("Detect"), 0, 1), String Slice(String("Control Point"), 2, 1), String("{0}: {1}",
			String(""), String("{0} + {1}", Input Binding String(Button(Reload)), Button(Melee))))), Null, Right, -11, Color(White), Color(
			White), Color(White), String and Color, Default Visibility);
		Create HUD Text(Event Player, Null, String("{0} {1} {2}", String Slice(String("Critical"), 1, 1), String Slice(String(
			"New High Score"), 1, 1), String("{0} {1} {2}", String Slice(String("Start"), 0, 1), String Slice(String("Start"), 1, 1),
			String("{0}: {1}", String(""), String("{0} + {1}", Button(Crouch), String("{0} + {1}", Input Binding String(Button(Ability 2)),
			Button(Interact)))))), Null, Right, -12, Color(White), Color(White), Color(White), String and Color, Default Visibility);
		Create HUD Text(Event Player, Null, Null, String("Rank"), Left, -20, Color(White), Color(White), Color(White), String and Color,
			Default Visibility);
		Set Objective Description(Event Player, String(""), String);
		Create HUD Text(Event Player, Null, Null, String("({0})"), Right, 29, Null, Null, Null, String and Color, Default Visibility);
	}
}

rule("抵达检查点")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 1.400;
		Event Player.A < Count Of(Global.A) - 1;
		Is On Ground(Event Player) == True;
		(Event Player.E >= 1 || Event Player.C == 0) == True;
	}

	actions
	{
		Event Player.A += 1;
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Value, String("{0} {1}", Event Player));
		Modify Global Variable(save, Append To Array, Array(String("{0} {1}", Event Player), Event Player.A, Event Player.D));
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 100);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Global.A[Event Player.A] + Vector(0, 1.500, 0), 4);
		Big Message(Event Player, String("{0} {1}", String(""), String("{0} / {1}", Event Player.A, Count Of(Global.A) - 1)));
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A - 1, Remove From Array By Value, Event Player);
		If(Event Player.E < 1);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
		End;
		Abort If(Event Player.E >= 1);
		If(Event Player.A >= Count Of(Global.A) - 1);
			Set Ability 1 Enabled(Event Player, True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Stop Chasing Player Variable(Event Player, D);
			Big Message(All Players(All Teams), String("{0} {1} {2}", Event Player, String(""), String("{0} sec", Event Player.D)));
			Destroy Effect(Event Player.B[0]);
			Destroy Effect(Event Player.B[1]);
			Destroy Effect(Event Player.B[2]);
			Destroy Icon(Event Player.B[3]);
			Destroy In-World Text(Event Player.B[4]);
			Modify Global Variable(F, Append To Array, Event Player);
			Modify Global Variable(G, Append To Array, Event Player);
			Event Player.H = 2;
		End;
	}
}

rule("显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
			Big Message(All Players(All Teams), String(""));
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.300, Clip Against Surfaces,
				Visible To Position and String, Color(Gray), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.300, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Remove Player(Event Player);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Yellow), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Red), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Orange), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Yellow), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Green), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Turquoise), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Blue), Default Visibility);
			Create In-World Text(All Players(All Teams), String(""), Event Player, 2, Clip Against Surfaces, Visible To Position and String,
				Color(Purple), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(String("{0} {1}") == String("{0} {1}", Event Player));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
	}
}

rule("球体伤害")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(Event Player,
			Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[0])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[1])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[2])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[3])
			] == Event Player.A) == True;
		Event Player.A != 0;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.C == 0;
	}

	actions
	{
		Kill(Event Player, Null);
	}
}

rule("弹球")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Global.pinballnumber[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Event Player,
			Current Array Element) <= 1.200))] == Event Player.A) == True;
		Event Player.A != 0;
	}

	actions
	{
		Apply Impulse(Event Player, Up, Global.EditMode[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))], To World, Cancel Contrary Motion);
		disabled Set Ability 1 Enabled(Event Player, Global.TQ6[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))]);
		disabled Set Ultimate Ability Enabled(Event Player, Global.TQ5[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))]);
		If(Global.TQ6[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Position Of(Event Player),
			Current Array Element) <= 2))] == True);
			Set Ability 1 Enabled(Event Player, True);
			Small Message(Event Player, String("{0} {1}", String("On"), String("Ability 1")));
		End;
		If(Global.TQ5[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Position Of(Event Player),
			Current Array Element) <= 2))] == True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Small Message(Event Player, String("{0} {1}", String("On"), String("Ultimate Ability")));
		End;
	}
}

rule("通关成绩显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Event Player.A == Count Of(Global.A) - 1;
		Event Player.E < 1;
	}

	actions
	{
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
		Modify Global Variable(save, Remove From Array By Value, String("{0} {1}", Event Player));
		If(Event Player.B[7] == Null);
			Event Player.T = Event Player.D;
			Create HUD Text(Array Contains(Global.toplistSortedTimes, Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, String(
				"", Event Player))]) == True ? Null : All Players(All Teams), Hero Icon String(Hero(Genji)), Event Player, String("",
				Event Player.T), Right, Event Player.T, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
				255, 187, 255), Visible To Sort Order and String, Default Visibility);
			Event Player.B[7] = Last Text ID;
		Else;
			Skip If(Event Player.D > Event Player.T, 1);
			Event Player.T = Event Player.D;
		End;
		If(Array Contains(Global.toplistPlayers, String("{0} {1}", Event Player, String(""))) == True);
			Skip If(Event Player.D >= Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, String("{0} {1}", Event Player, String(
				"")))], 1);
			Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, String("{0} {1}", Event Player, String("")))] = Event Player.D;
		Else;
			Modify Global Variable(toplistPlayers, Append To Array, String("{0} {1}", Event Player, String("")));
			Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, String("{0} {1}", Event Player, String("")))] = Event Player.D;
		End;
		Global.toplistSortedTimes = Array Slice(Sorted Array(Global.toplistTimes, Current Array Element), 0, 50);
		Stop Chasing Player Variable(Event Player, ztjs);
		Event Player.ztjs = 0;
	}
}

rule("通关波浪特效")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A == Count Of(Global.A) - 1;
		Event Player.E < 1;
		Is Moving(Event Player) == True;
		disabled (Is Moving(Event Player) == True || Is Button Held(Event Player, Button(Jump)) == True) == True;
	}

	actions
	{
		Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Position Of(Event Player), 1.600);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Position Of(Event Player), 1.400);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Purple), Position Of(Event Player), 1.200);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Position Of(Event Player), 1);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Position Of(Event Player), 0.800);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Aqua), Position Of(Event Player), 0.600);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Orange), Position Of(Event Player), 0.400);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Position Of(Event Player), 0.200);
		Wait(0.350, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("死亡传送")
{
	event
	{
		Player Died;
		All;
		All;
	}

	conditions
	{
		Event Player.F != 1;
		Count Of(Global.A) >= 2;
	}

	actions
	{
		Clear Status(Event Player, Phased Out);
		Resurrect(Event Player);
		If(Global.kz_xs == True);
			Event Player.L = 0;
			Stop Chasing Player Variable(Event Player, L);
			Event Player.A = Event Player.E > 0 ? Event Player.A : 0;
		End;
		Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
	}
}

rule("落地传送——————————— 制作球型跑酷图时，关闭此条规则，需要融合球型、点型二者的则不用 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Distance Between(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A])
			> 1.400 || False) == True;
		(Is On Ground(Event Player) == True || False) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Count Of(Global.A) >= 2;
		Event Player.C != 1;
		Event Player.F != 1;
		disabled (Event Player.A == -1 || Event Player.A == -1 || Event Player.A == -1 || False) == True;
	}

	actions
	{
		If(Event Player.E < 1);
			Set Ability 1 Enabled(Event Player, False);
			Set Ultimate Ability Enabled(Event Player, False);
		End;
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
		Set Status(Event Player, Null, Rooted, 0.100);
		If(Global.kz_xs == True);
			Event Player.L = 0;
			Stop Chasing Player Variable(Event Player, L);
			Event Player.A = Event Player.E > 0 ? Event Player.A : 0;
		End;
		Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
		If(Global.deathjump == True);
			Disallow Button(Event Player, Button(Jump));
			Wait(0.100, Ignore Condition);
			Allow Button(Event Player, Button(Jump));
		End;
		If(Event Player.A == 0);
			Event Player.D = 0;
		End;
		If(Is Using Ultimate(Event Player) == True);
			Kill(Event Player, Null);
		End;
	}
}

rule("消散")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Has Status(Event Player, Phased Out) == False;
	}

	actions
	{
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
	}
}

rule("重跑")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Ability 2)) == True;
	}

	actions
	{
		If(Array Contains(Global.save, String("{0} {1}", Event Player)) == True);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, String("{0} {1}", Event Player)) + 1);
			Modify Global Variable(save, Remove From Array By Value, String("{0} {1}", Event Player));
		End;
		Modify Global Variable At Index(P, Event Player.A, Remove From Array By Value, Event Player);
		If(Event Player.A >= Count Of(Global.A) - 1);
			Call Subroutine(Sub0);
			Destroy HUD Text(Event Player.B[7]);
			disabled Destroy Effect(Event Player.B[5]);
			disabled Destroy Effect(Event Player.B[6]);
		End;
		Call Subroutine(Sub1);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 100);
		Modify Global Variable(F, Remove From Array By Value, Event Player);
		Modify Global Variable(G, Remove From Array By Value, Event Player);
	}
}

rule("自杀观战")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Event Player.E < 1;
	}

	actions
	{
		Wait(1, Abort When False);
		If(Is Alive(Event Player) == True);
			Set Respawn Max Time(Event Player, 9999);
			Event Player.F = 1;
			Stop Chasing Player Variable(Event Player, D);
			Wait(0.200, Ignore Condition);
			Kill(Event Player, Null);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
		Else;
			Skip If(Event Player.E >= 1, 2);
			Respawn(Event Player);
			Event Player.F = 0;
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Skip If(Event Player.A >= Count Of(Global.A) - 1, 3);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Chase Player Variable At Rate(Event Player, D, 10000, 1, Destination and Rate);
			Set Respawn Max Time(Event Player, 0);
			Event Player.C = 0;
		End;
	}
}

rule("二段跳，小跳初始化")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY = 0;
		Event Player.J = 2;
		Wait(0, Ignore Condition);
		Loop If((Event Player.TY != 0 || Event Player.J != 2) && Is On Ground(Event Player) == True);
		Event Player.O = 1;
	}
}

rule("跳跃判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player.TY != 2;
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY += 1;
	}
}

rule("踏空小跳判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.TY == 0;
		Is In Air(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
	}

	actions
	{
		Event Player.O = 0;
	}
}

rule("踏空")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Event Player.TY == 0;
		Is In Air(Event Player) == True;
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY = 1;
	}
}

rule("三段精准判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.TY == 1;
	}

	actions
	{
		Wait(0.100, Abort When False);
		Event Player.TY = 2;
	}
}

rule("玩家在墙上")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
	}

	actions
	{
		Event Player.TY = 2;
		Event Player.J = 1;
	}
}

rule("探点")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Using Ability 1(Event Player) == False;
		Event Player.A < Count Of(Global.A) - 1;
		Is Alive(Event Player) == True;
		Is Using Ultimate(Event Player) == False;
	}

	actions
	{
		Start Forcing Player Position(Event Player, Count Of(Global.A[Event Player.A])
			!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], True);
		If(Event Player.C == 0);
			Stop Chasing Player Variable(Event Player, D);
			Big Message(Event Player, String("{0} {1}", String("{0} {1}", String Slice(String("Points Lost"), 1, 1), String Slice(String(
				"Detect"), 0, 1)), String("{0} {1}", String Slice(String("Burn"), 0, 1), String Slice(String("Not Today"), 2, 1))));
			Stop Forcing Player Position(Event Player);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Set Ability 1 Enabled(Event Player, True);
			Wait(0.200, Ignore Condition);
			Event Player.C = 1;
		Else;
			Skip If(Event Player.E >= 1, 2);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Wait(0.100, Ignore Condition);
			Event Player.C = 0;
			Big Message(Event Player, String("{0} {1}", String("{0} {1}", String Slice(String("Challenge Accepted"), 0, 1), String Slice(
				String("Challenge Accepted"), 1, 1)), String("{0} {1}", String Slice(String("Challenge Accepted"), 2, 1), String Slice(String(
				"Challenge Accepted"), 3, 1))));
			Chase Player Variable At Rate(Event Player, D, Absolute Value(9999999.000), 1, Destination and Rate);
			Stop Forcing Player Position(Event Player);
		End;
	}
}

rule("刀充能")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Ultimate Charge Percent(Event Player) < 100;
	}

	actions
	{
		Set Ultimate Charge(Event Player, 100);
	}
}

rule("表情小跳判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating Any Emote(Event Player) == True;
	}

	actions
	{
		Event Player.O = 0;
	}
}

rule("小跳使用判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.O == 0;
		Is Jumping(Event Player) == True;
	}

	actions
	{
		Event Player.O = 1;
		Small Message(Event Player, String("{0} {1}", String Slice(String("Min"), 1, 1), String("{0} {1}", String Slice(String("Skip"), 0,
			1), String("{0} {1}", String Slice(String("Skipped"), 0, 1), String Slice(String("No Thanks"), 1, 1)))));
	}
}

rule("爬墙已用HUD")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == 1;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Destroy HUD Text(Event Player.paqiang);
		Create HUD Text(Event Player, String(""), Null, Null, Left, -1, Color(Red), Color(White), Color(White), Visible To and String,
			Default Visibility);
		Event Player.paqiang = Last Text ID;
		Small Message(Event Player, String("{0} {1}", String Slice(String("Detected"), 0, 1), String("{0} {1}", String Slice(String(
			"Interact"), 1, 1), String("{0} {1}", String Slice(String("Skipped"), 0, 1), String Slice(String("No Thanks"), 1, 1)))));
	}
}

rule("玩家离开比赛")
{
	event
	{
		Player Left Match;
		All;
		All;
	}

	actions
	{
		Modify Global Variable(Q, Remove From Array By Value, Event Player);
		If(Global.save[Index Of Array Value(Global.save, Event Player) - 2] == 0);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) + 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) + 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) + 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) - 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) - 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Event Player) - 1);
			Modify Global Variable(save, Remove From Array By Value, Event Player);
		Else;
			Skip If(Global.save[Index Of Array Value(Global.save, Event Player) - 2] >= Count Of(Global.A) - 1, 2);
			Skip If(Global.save[Index Of Array Value(Global.save, Event Player) + 3] == 1, 1);
			Global.save[Index Of Array Value(Global.save, Event Player) - 1] = Total Time Elapsed - Global.save[Index Of Array Value(
				Global.save, Event Player) + 1] - Global.save[Index Of Array Value(Global.save, Event Player)
				+ 2] + Global.save[Index Of Array Value(Global.save, Event Player) - 1];
			Global.save[Index Of Array Value(Global.save, Event Player) + 2] = 0;
			Global.save[Index Of Array Value(Global.save, Event Player) + 3] = 0;
		End;
	}
}

rule("卡小跳判定 感谢Githuboy#5249")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == False;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
		Is On Ground(Event Player) == False;
		Is In Air(Event Player) == True;
		Is Jumping(Event Player) == False;
		Is Crouching(Event Player) == True;
	}

	actions
	{
		Small Message(Event Player, String("{0} {1}", String Slice(String("Guilty"), 0, 1), String("{0} {1}", String Slice(String("Min"),
			1, 1), String("{0} {1}", String Slice(String("Skipped"), 1, 1), String Slice(String("No Thanks"), 2, 1)))));
		Event Player.O = 0;
		If(Global.kaxiaotiao == True);
			Kill(Event Player, Null);
			Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), String("")));
		End;
	}
}

rule("快速回城")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Event Player.E < 1;
	}

	actions
	{
		Abort If(Is Button Held(Event Player, Button(Melee)) == True);
		If(Event Player.quick_restart == True);
			Start Forcing Player Position(Event Player, Count Of(Global.A[Event Player.A])
				!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], True);
			Skip If(Event Player.E >= 1 || Event Player.C == 1, 2);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Wait(0.100, Ignore Condition);
			Stop Forcing Player Position(Event Player);
		End;
		Wait(1, Abort When False);
		If(Event Player.quick_restart == False);
			Event Player.quick_restart = True;
			Big Message(Event Player, String("{0} {1} {2}", String("On"), String("{0} {1}", String("Fast"), String Slice(String("Speed"), 0,
				1)), String("{0} {1}", String Slice(String("Round"), 0, 1), String Slice(String("Burn"), 0, 1))));
			Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 100);
		Else If(Event Player.quick_restart == True);
			Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 100);
			Event Player.quick_restart = False;
			Big Message(Event Player, String("{0} {1} {2}", String("Off"), String("{0} {1}", String("Fast"), String Slice(String("Speed"), 0,
				1)), String("{0} {1}", String Slice(String("Round"), 0, 1), String Slice(String("Burn"), 0, 1))));
		End;
	}
}

rule("限制刀———— 无须更改 ———————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is Using Ultimate(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.E < 1;
		Event Player.C == 0;
	}

	actions
	{
		Set Ultimate Ability Enabled(Event Player, False);
	}
}

rule("限制shift———无须更改 ————————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Using Ability 1(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.E < 1;
		Event Player.C == 0;
	}

	actions
	{
		Set Ability 1 Enabled(Event Player, False);
	}
}

rule("给刀—————无须更改 —————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Distance Between(Event Player, Count Of(Global.A[Event Player.A]) > 1 ? Last Of(Global.A[Event Player.A])
			: Global.A[Event Player.A]) <= 1.400;
		Array Contains(Global.Dao, Event Player.A) == True;
		Is Using Ultimate(Event Player) == False;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Abort If(Is Using Ultimate(Event Player) == True);
		Set Ultimate Ability Enabled(Event Player, True);
		Set Ultimate Charge(Event Player, 100);
		Small Message(Event Player, String("{0} {1}", String("On"), String("Ultimate Ability")));
	}
}

rule("给shift————无须更改 —————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		disabled Distance Between(Event Player, Global.A[Event Player.A]) <= 1.400;
		Distance Between(Event Player, Count Of(Global.A[Event Player.A]) > 1 ? Last Of(Global.A[Event Player.A])
			: Global.A[Event Player.A]) <= 1.400;
		Array Contains(Global.SHIFT, Event Player.A) == True;
		Is Using Ability 1(Event Player) == False;
	}

	actions
	{
		Set Ability 1 Enabled(Event Player, True);
		Small Message(Event Player, String("{0} {1}", String("On"), String("Ability 1")));
	}
}

rule("———————————————— 以下灰色的功能，需要用时再另行设置 ————————————————")
{
	event
	{
		Ongoing - Global;
	}
}

rule("刀关卡设置——————————— 将“-1”修改为给刀关卡数即可 ——————————")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Dao = Array(Empty Array, 24, 26, 33, 42, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
	}
}

rule("SHIFT关卡设置————————— 将“-1”修改为给shift关卡数即可 ——————————")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.SHIFT = Array(Empty Array, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
	}
}

disabled rule("传送门1-2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		disabled Teleport(Event Player, Vector(0, 0, 0));
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("传送门2-3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		disabled Teleport(Event Player, Vector(0, 0, 0));
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("传送门3-1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		disabled Teleport(Event Player, Vector(0, 0, 0));
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("特定关卡可见的地图文本")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		disabled Create In-World Text(Sorted Array(Global.P[0], Current Array Element), String(""), Vector(0, 0, 0), 1.200, Clip Against Surfaces,
			Visible To Position and String, Color(Orange), Default Visibility);
		disabled Create In-World Text(Sorted Array(Global.P[1], Current Array Element), String(""), Vector(0, 0, 0), 1.200, Clip Against Surfaces,
			Visible To Position and String, Color(Orange), Default Visibility);
		disabled Create In-World Text(Sorted Array(Global.P[2], Current Array Element), String(""), Vector(0, 0, 0), 3, Clip Against Surfaces,
			Visible To Position and String, Color(Orange), Default Visibility);
	}
}

disabled rule("指定关卡可见HUD文本")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		disabled Create HUD Text(Sorted Array(Global.P[0], Current Array Element), String(""), Null, Null, Top, -4, Color(Red), Color(White), Color(
			White), Visible To and String, Default Visibility);
		disabled Create HUD Text(Sorted Array(Global.P[1], Current Array Element), String(""), Null, Null, Top, -4, Color(Red), Color(White), Color(
			White), Visible To and String, Default Visibility);
		disabled Create HUD Text(Sorted Array(Global.P[2], Current Array Element), String(""), Null, Null, Top, -4, Color(Red), Color(White), Color(
			White), Visible To and String, Default Visibility);
	}
}

disabled rule("地图文本")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("DVA点位——————DVA炸栏杆请手动添加坐标点位")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.DVA = Empty Array;
		Global.dva = 0;
		disabled Modify Global Variable(DVA, Append To Array, Vector(-78.678, 15.092, -97.781));
		disabled Modify Global Variable(DVA, Append To Array, Vector(-68.359, 16.199, -89.387));
		disabled Modify Global Variable(DVA, Append To Array, Vector(-79.100, 16.199, -88.100));
	}
}

disabled rule("召唤DVA")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.dva == 0;
		Count Of(All Players(Team 2)) < 6;
	}

	actions
	{
		Create Dummy Bot(Hero(D.Va), Team 2, 5, Global.DVA[Global.dva], Up);
		Global.dva += 1;
		Start Holding Button(Players On Hero(Hero(D.Va), All Teams), Button(Ultimate));
		Wait(6.500, Ignore Condition);
		Loop If(Global.dva < Count Of(Global.DVA));
		Stop Holding Button(Players On Hero(Hero(D.Va), All Teams), Button(Ultimate));
		Destroy Dummy Bot(Team 2, 5);
	}
}

disabled rule("传送门显示——可变字体")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create In-World Text(Event Player, String("", Event Player.H, String(""), String("")), Vector(276.288, -17.222, -74.522), 1.500,
			Clip Against Surfaces, Visible To Position and String, Color(Yellow), Default Visibility);
		Create In-World Text(Event Player, String("", Event Player.H, String(""), String("")), Vector(1, 1, 1), 1.500,
			Clip Against Surfaces, Visible To Position and String, Color(Yellow), Default Visibility);
	}
}

disabled rule("传送门显示——光环及光柱及不可变“至图一”字体")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Effect(Global.F, Ring, Color(Lime Green), Vector(0, 0, 0), 1, Visible To Position and Radius);
		Create Effect(Global.F, Light Shaft, Color(Red), Vector(276.288, -17.222, -74.522), 1, Visible To Position and Radius);
		Create Effect(Global.G, Ring, Color(Lime Green), Vector(1, 1, 1), 1, Visible To Position and Radius);
		Create Effect(Global.G, Light Shaft, Color(Red), Vector(1, 1, 1), 1, Visible To Position and Radius);
		Create Effect(Global.F, Ring, Color(Lime Green), Vector(2, 2, 2), 1, Visible To Position and Radius);
		Create Effect(Global.F, Light Shaft, Color(Red), Vector(2, 2, 2), 1, Visible To Position and Radius);
		Create In-World Text(Global.F, String(""), Vector(0, 0, 0), 1.500, Clip Against Surfaces, Visible To Position and String, Color(
			Yellow), Default Visibility);
	}
}

disabled rule("开启传送门视野—————————— 特定关卡时开启 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Event Player.A == -1 || Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		Event Player.H = 1;
		If(Event Player.A == -1);
			Modify Global Variable(F, Append To Array, Event Player);
		Else If(Event Player.A == -2);
			Modify Global Variable(G, Append To Array, Event Player);
		Else If(Event Player.A >= Count Of(Global.A) - 1);
			Modify Global Variable(G, Append To Array, Event Player);
			Modify Global Variable(F, Append To Array, Event Player);
			Event Player.H = 2;
		End;
	}
}

disabled rule("关闭传送门视野—————————— 特定关卡时关闭 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Event Player.A == -2 || Event Player.A == -2 || False) == True;
	}

	actions
	{
		Event Player.H = 0;
		If(Event Player.A == -2);
			Modify Global Variable(F, Remove From Array By Value, Event Player);
		Else If(Event Player.A == -2);
			Modify Global Variable(G, Remove From Array By Value, Event Player);
		End;
	}
}

disabled rule("作者名字在这输入")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, String(""), Top, -3, Color(Sky Blue), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

disabled rule("好友称号")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		If(String("") == String("", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		End;
		If(String("") == String("", Event Player));
			Big Message(All Players(All Teams), String(""));
			Create In-World Text(All Players(All Teams), String(""), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		End;
	}
}

rule("------------------------------------开启/关闭扩展功能请前往地图工坊设置，以下规则请勿关闭------------------------------------------")
{
	event
	{
		Ongoing - Global;
	}
}

rule("三段封禁")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Vertical Speed Of(Event Player) >= 5.800;
		Event Player.TY == 1;
		Is Using Ability 1(Event Player) == False;
	}

	actions
	{
		Abort If(Is On Wall(Event Player) == True);
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
	}
}

rule("封蹭墙")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
		Event Player.J == 2;
	}

	actions
	{
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
		Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), String("")));
	}
}

rule("封卡小跳")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.kaxiaotiao = True;
	}
}

disabled rule("封表情小跳")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating Any Emote(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Kill(Event Player, Null);
		Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), String("")));
	}
}

disabled rule("封死亡小跳")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.deathjump = True;
	}
}

disabled rule("扩展: 系統跳強化（原作：家里有妖怪#5202）  效果：增强系統跳的判定（更容易卡出系統跳了）以及力度（跳得更远）")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
		(Vertical Speed Of(Event Player) >= -0.200 && Vertical Speed Of(Event Player) <= 0.050) == True;
		Horizontal Speed Of(Event Player) <= 1.300;
		Is In Air(Event Player) == True;
		Is On Wall(Event Player) == False;
		Is On Ground(Event Player) == False;
	}

	actions
	{
		Wait(0.250, Abort When False);
		Start Forcing Player Position(Event Player, Position Of(Event Player), False);
		Wait Until(Is Moving(Event Player) == False, 10);
		Stop Forcing Player Position(Event Player);
		Set Move Speed(Event Player, 0);
		Set Gravity(Event Player, 0);
		Wait(3, Ignore Condition);
		Set Gravity(Event Player, 100);
		Set Move Speed(Event Player, 100);
		Apply Impulse(Event Player, Up, 10, To World, Cancel Contrary Motion);
		Loop If Condition Is True;
	}
}

disabled rule("扩展：爬墙刷新二段（喵喵酱#51379）效果：玩家在爬墙后刷新二段跳（扒墙蹭墙都不会刷新）")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == True;
	}

	actions
	{
		Wait(0.250, Abort When False);
		Wait Until(Is On Wall(Event Player) == False, 1);
		Set Status(Event Player, Null, Hacked, 0.100);
		Wait(0.100, Ignore Condition);
		Clear Status(Event Player, Hacked);
	}
}

disabled rule("扩展：留爬进点(TITANXPASCAL#5554)*记得创建文本提示玩家")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 2;
		Array Contains(Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1), Event Player.A) == True;
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		If(Event Player.J == 1);
			Kill(Event Player, Null);
			Small Message(Event Player, String(""));
		End;
	}
}

disabled rule("扩展：留小跳进点(TITANXPASCAL#5554)*记得创建文本提示玩家")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 2;
		Array Contains(Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1), Event Player.A) == True;
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		If(Event Player.O == 1);
			Kill(Event Player, Null);
			Small Message(Event Player, String(""));
		End;
	}
}

rule("规则 91")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.E > 0 ? Event Player.A : 0]) > 1.400;
		Global.kz_xs == True;
		(Event Player.E > 0 ? 0 : Event Player.C) != 1;
		(Event Player.E > 0 ? 0 : Event Player.A) == 0;
		disabled Event Player.A == 0;
		disabled Event Player.C != 1;
	}

	actions
	{
		Event Player.L = 0;
		Chase Player Variable At Rate(Event Player, L, 10, 1, Destination and Rate);
		Event Player.D = 0;
	}
}

rule("规则 92")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Global.kz_xs == True;
		Event Player.L >= 5;
		Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.A = Event Player.E > 0 ? Event Player.A : 0;
		Skip If(Event Player.C == 1, 2);
		Skip If(Event Player.E > 0 && Is On Ground(Event Player), 2);
		Teleport(Event Player, Global.A[Event Player.E < 1 ? 0 : Event Player.A]);
		Small Message(Event Player, String(""));
		Stop Chasing Player Variable(Event Player, L);
	}
}

rule("规则 93")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[0]) < 1;
		Event Player.A == 0;
		Global.kz_xs == True;
	}

	actions
	{
		Stop Chasing Player Variable(Event Player, L);
		Event Player.L = 0;
		Event Player.D = 0;
	}
}

rule("规则 94")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.C == 1;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Global.kz_xs == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
	}

	actions
	{
		Event Player.A += Event Player.A < Count Of(Global.A) - 2 ? 1 : 0;
		Teleport(Event Player, Global.A[Event Player.A]);
	}
}

rule("规则 94")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.C == 1;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Global.kz_xs == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
	}

	actions
	{
		Event Player.A -= Event Player.A > 0 ? 1 : 0;
		Teleport(Event Player, Global.A[Event Player.A]);
	}
}