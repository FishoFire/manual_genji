settings
{
	lobby
	{
		Map Rotation: Paused
		Max Team 1 Players: 12
		Max Team 2 Players: 0
		Return To Lobby: Never
	}

	modes
	{
		Team Deathmatch
		{
			Game Length In Minutes: 15
			Mercy Resurrect Counteracts Kills: Off
			Self Initiated Respawn: Off

			enabled maps
			{
				Lijiang Night Market 0
			}
		}

		General
		{
			Allow Hero Switching: Off
			Enemy Health Bars: Off
			Game Mode Start: Manual
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
		}
	}

	heroes
	{
		General
		{
			D.Va
			{
				Spawn With Ultimate Ready: On
			}

			Genji
			{
				Deflect Cooldown Time: 0%
				Spawn With Ultimate Ready: On
				Swift Strike Cooldown Time: 0%
				Ultimate Duration: 25%
			}

			enabled heroes
			{
				Genji
			}
		}
	}

	workshop
	{
		封禁三段: On
		封禁死亡小跳: On
		封禁表情跳: On
		封禁蹭墙: On
	}
}

variables
{
	global:
		3: DVA
		4: dva
		12: Dao
		13: SHIFT
		14: SUPERJUMP
		18: TQ
		19: TQ1
		20: TQ2
		21: TQ3
		22: EditMode
		23: TQ5
		24: TQ6
		26: killballnumber
		27: pinballnumber
		28: deathjump
		30: save
		32: toplistPlayers
		33: toplistTimes
		34: toplistSortedTimes
		35: kaxiaotiao
		36: BAN
		38: NANBA

	player:
		26: TY
		28: paqiang
		31: quick_restart
}

subroutines
{
	3: KILLBALL
	4: pinball
}

disabled rule("防查看器崩溃（作图时开启，比赛时关闭）")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Inspector Recording;
		Wait(10, Ignore Condition);
		Enable Inspector Recording;
		Loop;
	}
}

disabled rule("清爽模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Melee)) == True;
		Event Player == Host Player;
		Event Player.E >= 1;
	}

	actions
	{
		Wait(0.800, Abort When False);
		Play Effect(Host Player, Buff Impact Sound, Color(White), Event Player, 100);
		If(Event Player.K == 1);
			Event Player.K = 2;
			Small Message(All Players(All Teams), Custom String("指引文本已折叠"));
		Else;
			Event Player.K = 1;
			Small Message(All Players(All Teams), Custom String("指引文本已开启"));
		End;
	}
}

disabled rule("清空多余数据")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Global.B = 0;
		Global.C = 0;
		Global.DVA = 0;
		Global.dva = 0;
		Global.F = 0;
		Global.G = 0;
		Global.J = 0;
		Global.K = 0;
		Global.L = 0;
		Global.Dao = 0;
		Global.SHIFT = 0;
		Global.SUPERJUMP = 0;
		Global.P = 0;
		Global.Q = 0;
		Global.R = 0;
		Global.TQ1 = 0;
		Global.NANBA = 0;
		Global.TQ2 = 0;
		Global.TQ3 = 0;
		Global.save = 0;
		Big Message(All Players(All Teams), Custom String("已清空数据（点位/球体外）！"));
		Big Message(All Players(All Teams), Custom String("已清空数据（点位/球体外）！"));
		Enable Inspector Recording;
	}
}

disabled rule("穿墙")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Event Player.E == 1;
	}

	actions
	{
		Teleport(Event Player, Position Of(Event Player) + Facing Direction Of(Event Player) * 3);
	}
}

disabled rule("修改编辑模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Wait(1, Abort When False);
		If(Event Player.E == 1);
			Event Player.E = 2;
			Small Message(Host Player, Custom String("当前编辑模式为：球体"));
		Else If(Event Player.E == 2);
			Event Player.E = 3;
			Small Message(Host Player, Custom String("当前编辑模式为：弹球"));
		Else If(Event Player.E == 3);
			Event Player.E = 1;
			Small Message(Host Player, Custom String("当前编辑模式为：点位"));
		End;
	}
}

disabled rule("修改球体大小/增大")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			If(Count Of(Global.H) > 0);
				Global.I[Global.J] += 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
			End;
		Else If(Event Player.E == 3);
			If(Count Of(Global.TQ) > 0);
				Global.EditMode[Global.TQ1] += 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
			End;
		End;
	}
}

disabled rule("修改球体大小/缩小")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
		Is Button Held(Event Player, Button(Interact)) == False;
	}

	actions
	{
		If(Count Of(Global.H) > 0);
			If(Event Player.E == 2);
				Global.I[Global.J] -= 0.100;
				Wait(0.100, Ignore Condition);
				Loop If Condition Is True;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
			End;
		End;
	}
}

disabled rule("弹球弹力减小")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Is Button Held(Event Player, Button(Interact)) == False;
	}

	actions
	{
		If(Count Of(Global.TQ) > 0);
			Global.EditMode[Global.TQ1] -= 0.100;
			Wait(0.100, Ignore Condition);
			Loop If Condition Is True;
		End;
	}
}

disabled rule("移动球体/往面朝方向")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			Skip If(Global.L != Global.H[Global.J], 1);
			Chase Global Variable At Rate(L, Eye Position(Event Player) + Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.H[Global.J]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(L);
			Global.H[Global.J] = Global.L;
			For Global Variable(NANBA, 0, Count Of(Global.H), 1);
				Destroy Effect(Global.K[Global.NANBA]);
			End;
			Global.K = Empty Array;
			Call Subroutine(KILLBALL);
		Else If(Event Player.E == 3);
			Skip If(Global.TQ3 != Global.TQ[Global.TQ1], 1);
			Chase Global Variable At Rate(TQ3, Eye Position(Event Player) + Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.TQ[Global.TQ1]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(TQ3);
			Global.TQ[Global.TQ1] = Global.TQ3;
			For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
				Destroy Effect(Global.TQ2[Global.NANBA]);
			End;
			Global.TQ2 = Empty Array;
			Call Subroutine(pinball);
		End;
	}
}

disabled rule("移动球体/往身后方向")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player == Host Player;
		Event Player.E > 1;
	}

	actions
	{
		If(Event Player.E == 2);
			Skip If(Global.L != Global.H[Global.J], 1);
			Chase Global Variable At Rate(L, Eye Position(Event Player) - Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.H[Global.J]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(L);
			Global.H[Global.J] = Global.L;
			For Global Variable(NANBA, 0, Count Of(Global.H), 1);
				Destroy Effect(Global.K[Global.NANBA]);
			End;
			Global.K = Empty Array;
			Call Subroutine(KILLBALL);
		Else If(Event Player.E == 3);
			Skip If(Global.TQ3 != Global.TQ[Global.TQ1], 1);
			Chase Global Variable At Rate(TQ3, Eye Position(Event Player) - Facing Direction Of(Event Player) * (Distance Between(Position Of(
				Event Player), Global.TQ[Global.TQ1]) + 5), 1, Destination and Rate);
			Wait(0.250, Ignore Condition);
			Loop If Condition Is True;
			Stop Chasing Global Variable(TQ3);
			Global.TQ[Global.TQ1] = Global.TQ3;
			For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
				Destroy Effect(Global.TQ2[Global.NANBA]);
			End;
			Global.TQ2 = Empty Array;
			Call Subroutine(pinball);
		End;
	}
}

disabled rule("编辑模式")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		"玩家E：编辑模式"
		Event Player.E = 1;
		Event Player.K = 1;
	}
}

disabled rule("创建点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Modify Global Variable(A, Append To Array, Position Of(Event Player) - Vector(0, 0, 0));
			Global.B = Count Of(Global.A) - 1;
			Small Message(All Players(All Teams), Custom String("已新建点位"));
		Else If(Event Player.E == 2);
			If(Event Player.A == 0);
				Big Message(All Players(All Teams), Custom String("第0关不可放置击杀球"));
			Else;
				Modify Global Variable(H, Append To Array, Position Of(Event Player));
				Modify Global Variable(killballnumber, Append To Array, Event Player.A);
				Global.J = Count Of(Global.H) - 1;
				Global.I[Global.J] = 5;
				For Global Variable(NANBA, 0, Count Of(Global.H), 1);
					Destroy Effect(Global.K[Global.NANBA]);
				End;
				Global.K = Empty Array;
				Call Subroutine(KILLBALL);
				Global.L = Global.H[Global.J];
				Big Message(All Players(All Teams), Custom String("已新建击杀球，该球体仅第{0}关有效！", Event Player.A));
			End;
		Else If(Event Player.E == 3);
			If(Event Player.A == 0);
				Big Message(All Players(All Teams), Custom String("第0关不可放置弹球"));
			Else;
				Modify Global Variable(TQ, Append To Array, Position Of(Event Player));
				Global.TQ1 = Count Of(Global.TQ) - 1;
				Global.EditMode[Global.TQ1] = 10;
				Global.TQ5[Global.TQ1] = False;
				Global.TQ6[Global.TQ1] = False;
				For Global Variable(NANBA, 0, Count Of(Global.TQ), 1);
					Destroy Effect(Global.TQ2[Global.NANBA]);
				End;
				Global.TQ2 = Empty Array;
				Call Subroutine(pinball);
				Global.TQ3 = Global.TQ[Global.TQ1];
				Modify Global Variable(pinballnumber, Append To Array, Event Player.A);
				Big Message(All Players(All Teams), Custom String("已新建弹球，该球仅第{0}关有效！", Event Player.A));
			End;
	}
}

disabled rule("删除点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Modify Global Variable(A, Remove From Array By Index, Global.B);
			Modify Global Variable(C, Remove From Array By Index, Global.B);
			Skip If(Global.B <= 0, 1);
			Global.B -= 1;
			Small Message(All Players(All Teams), Custom String("已删除点位"));
		Else If(Event Player.E == 2 && Count Of(Global.H) != 0);
			Modify Global Variable(H, Remove From Array By Index, Global.J);
			Modify Global Variable(I, Remove From Array By Index, Global.J);
			Modify Global Variable(killballnumber, Remove From Array By Index, Global.J);
			Destroy Effect(Global.K[Global.J]);
			Modify Global Variable(K, Remove From Array By Index, Global.J);
			Skip If(Global.J <= 0, 1);
			Global.J -= 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3 && Count Of(Global.TQ) != 0);
			Modify Global Variable(TQ, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(EditMode, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(TQ5, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(TQ6, Remove From Array By Index, Global.TQ1);
			Destroy Effect(Global.TQ2[Global.TQ1]);
			Modify Global Variable(TQ2, Remove From Array By Index, Global.TQ1);
			Modify Global Variable(pinballnumber, Remove From Array By Index, Global.TQ1);
			Skip If(Global.TQ1 <= 0, 1);
			Global.TQ1 -= 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
		End;
	}
}

disabled rule("修改点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Event Player == Host Player;
	}

	actions
	{
		Small Message(All Players(All Teams), Count Of(Global.A[Global.B]) != 0 ? Custom String("点{0}传送点已删除", Global.B) : Custom String(
			""));
		Global.A[Global.B] = Position Of(Event Player) - Vector(0, 0, 0);
		Small Message(All Players(All Teams), Custom String("已移动点位"));
	}
}

disabled rule("添加传送点")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		(Is Button Held(Host Player, Button(Interact)) && Is Button Held(Host Player, Button(Reload))) == True;
		Count Of(Global.A) > 1;
		Host Player.E == 1;
		Global.B > 0;
		Is Button Held(Host Player, Button(Melee)) == False;
	}

	actions
	{
		Abort If(Is Button Held(Host Player, Button(Melee)) == True);
		Global.A[Global.B] = Array(Count Of(Global.A[Global.B]) != 0 ? Global.A[Global.B][0] : Global.A[Global.B], Position Of(
			Host Player));
		Small Message(All Players(All Teams), Custom String("已为点{0}添加传送点", Global.B));
	}
}

disabled rule("移动选中点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Skip If(Global.B <= 0, 1);
			Global.B -= 1;
		Else If(Event Player.E == 2);
			Skip If(Global.J <= 0, 2);
			Global.J -= 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3);
			Skip If(Global.TQ1 <= 0, 2);
			Global.TQ1 -= 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
		End;
	}
}

disabled rule("移动选中点位")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player == Host Player;
	}

	actions
	{
		If(Event Player.E == 1);
			Skip If(Global.B == Count Of(Global.A) - 1, 1);
			Global.B += 1;
		Else If(Event Player.E == 2);
			Skip If(Global.J == Count Of(Global.H) - 1, 2);
			Global.J += 1;
			Global.L = Global.H[Global.J];
		Else If(Event Player.E == 3);
			Skip If(Global.TQ1 == Count Of(Global.TQ) - 1, 2);
			Global.TQ1 += 1;
			Global.TQ3 = Global.TQ[Global.TQ1];
	}
}

disabled rule("弹球启用关闭终极技能")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Is Button Held(Event Player, Button(Ultimate)) && Is Button Held(Event Player, Button(Primary Fire))) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Count Of(Global.TQ) != 0;
	}

	actions
	{
		Wait(1, Ignore Condition);
		If(Global.TQ5[Global.TQ1] == False);
			Global.TQ5[Global.TQ1] = True;
		Else If(Global.TQ5[Global.TQ1] == True);
			Global.TQ5[Global.TQ1] = False;
		End;
	}
}

disabled rule("弹球启用关闭技能1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Is Button Held(Event Player, Button(Secondary Fire)) && Is Button Held(Event Player, Button(Ultimate))) == True;
		Event Player == Host Player;
		Event Player.E == 3;
		Count Of(Global.TQ) != 0;
	}

	actions
	{
		Wait(1, Ignore Condition);
		If(Global.TQ6[Global.TQ1] == False);
			Global.TQ6[Global.TQ1] = True;
		Else If(Global.TQ6[Global.TQ1] == True);
			Global.TQ6[Global.TQ1] = False;
		End;
	}
}

disabled rule("指引类文本【操作指引】")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{{0}}", Host Player.K, Append To Array(Append To Array(
			Append To Array(Append To Array(Empty Array, 0), Custom String(
			"互动+鼠标左键=在玩家位置新建点位\r\n互动+鼠标右键=删除选中点位\r\n互动+R=为当前点位添加传送点\r\n互动+Q=修改选中点位至玩家位置（不打乱点位顺序）\r\n互动+蹲=向后（0后1前）移动选中点位\r\n互动+跳跃=向前移动选中点位")),
			Custom String(
			"互动+鼠标左键=新建球体\r\n互动+鼠标右键=删除球体\r\n互动+蹲下=向后选择球体\r\n互动+跳跃=向前选择球体\r\nE+跳跃=放大球体\r\nE+蹲下=缩小球体\r\nE+左键=前移球体（位置）\r\nE+右键=后移球体（位置）\r\n选中的球体为粉红色")),
			Custom String(
			"互动+鼠标左键=新建弹球\r\n互动+鼠标右键=删除弹球\r\n互动+蹲下=向后选择弹球\r\n互动+跳跃=向前选择弹球\r\nE+跳跃=放大弹球弹力\r\nE+蹲下=缩小弹球弹力\r\nE+左键=前移弹球（位置）\r\nE+右键=后移弹球（位置）\r\n选中的弹球为紫色"))
			[Host Player.E], Custom String("长按近战打开指引文本")), Right, -3, Color(White), Color(White), Color(Yellow), Visible To and String,
			Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{{0}}", Host Player.K, Custom String(
			"以下为所有玩家可进行的操作：                                 \r\n（点位编辑模式）长按E穿墙\r\n蹲+鼠标左=跳关，蹲+右键=退关\r\n"), Custom String("")), Right, -2,
			Color(White), Color(White), Color(Green), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{{0}}", Host Player.K, Custom String(
			"房主长按“近战”可关闭操作指引文本\r\n此制作器由易忘#51876设计制作\r\n后续更新：五里雾中#51574\r\n近期更新：留爬留小跳进点(TT)\r\n"), Custom String("")), Right, -1, Color(
			White), Color(White), Color(Red), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{{0}}", Host Player.K, Custom String(
			"①将点位设置确认完毕后，按“互动+近战+换弹”清除多余数据\r\n②ESC打开“工坊查看器”，将右下角的变量目标改成第一个“全局”\r\n③点击（X）符号的按钮复制数据，再ESC打开“工坊编辑器”，在规则“数据录入”处录入数据"),
			Custom String("")), Top, -3, Color(White), Color(White), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("{{0}}", Host Player.K, Append To Array(Append To Array(Append To Array(
			Append To Array(Empty Array, 0), Custom String("长按SHIFT修改编辑模式\r\n当前编辑模式为：点位")), Custom String("长按SHIFT修改编辑模式\r\n当前编辑模式为：击杀球")),
			Custom String("长按SHIFT修改编辑模式\r\n当前编辑模式为：弹球"))[Host Player.E], Custom String("操作指引已关闭")), Null, Append To Array(Append To Array(
			Append To Array(Append To Array(Empty Array, Custom String("")), Custom String("")), Custom String("")), Custom String(
			"长按Q+左设置终极技能开启关闭\r\n长按Q+右键设置技能1开启关闭。"))[Host Player.E], Left, -6, Color(Red), Color(White), Color(Orange),
			Visible To and String, Default Visibility);
	}
}

disabled rule("指引类文本、效果【包含点位显示】")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Icon(All Players(All Teams), Global.A[Global.B] + Vector(0, 0.600, 0), Arrow: Down, Visible To and Position, Color(Red),
			True);
		Create In-World Text(All Players(All Teams), Custom String("已选中该点"), Global.A[Global.B] + Vector(0, 0.500, 0), 1.600, Do Not Clip,
			Visible To Position and String, Color(Red), Default Visibility);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Red), Global.H[Global.J], Global.I[Global.J], Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Global.TQ[Global.TQ1], 1, Visible To Position and Radius);
		"轻易别打开，动作太长会"
		Create HUD Text(All Players(All Teams), Append To Array(Append To Array(Append To Array(Append To Array(Empty Array, 0),
			Custom String("当前选中点位序号:{0}", Global.B)), Custom String("当前球体半径:{0}", Global.I[Global.J])), Custom String("当前弹球弹力:{0}",
			Global.EditMode[Global.TQ1]))[Host Player.E], Null, Append To Array(Append To Array(Append To Array(Append To Array(
			Empty Array, Custom String("")), Custom String("")), Custom String("")), Custom String(
			"若无弹球无需理会\r\n当前弹球是否开启终极技能:{0}\r\n当前弹球是否开启技能1:{1}", Global.TQ5[Global.TQ1], Global.TQ6[Global.TQ1]))[Host Player.E], Top, -6,
			Color(Red), Color(White), Color(Orange), Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("已选中该击杀球"), Global.H[Global.J], 1.600, Do Not Clip,
			Visible To Position and String, Color(Sky Blue), Default Visibility);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.L, 1, Visible To Position and Radius);
		Create In-World Text(Host Player, String("{0} m", Distance Between(Host Player, Global.L)), Global.L - Vector(0, 1.500, 0), 1.500,
			Do Not Clip, Visible To Position and String, Color(Red), Default Visibility);
		Create Icon(All Players(All Teams), Global.H[Global.J] + Vector(0, 0.600, 0), Arrow: Down, Visible To and Position, Color(Red),
			True);
	}
}

disabled rule("清除所有点位显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Event Player == Host Player;
	}

	actions
	{
		For Global Variable(B, Count Of(Global.C) - 1, 0, -1);
			Destroy Effect(Global.C[Global.B]);
			Modify Global Variable(C, Remove From Array By Index, Global.B);
		End;
		Global.B = -2;
	}
}

disabled rule("显示所有点位")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.B == -2;
	}

	actions
	{
		For Global Variable(B, 0, Count Of(Global.A), 1);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.A[Global.B], 1, Visible To);
			Modify Global Variable(C, Append To Array, Last Created Entity);
		End;
	}
}

disabled rule("跳关")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.A += 1;
		Teleport(Event Player, Global.A[Event Player.A]);
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A - 1, Remove From Array By Value, Event Player);
	}
}

disabled rule("退关")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player.A != 0;
	}

	actions
	{
		Teleport(Event Player, Global.A[Event Player.A - 1]);
		Event Player.A -= 1;
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A + 1, Remove From Array By Value, Event Player);
	}
}

rule("------------------------------------------------------以上规则正式比赛时关闭------------------------------------------------------")
{
	event
	{
		Ongoing - Global;
	}
}

rule("全局设置")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Inspector Recording;
		Disable Built-In Game Mode Respawning(All Players(All Teams));
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Music;
		Pause Match Time;
		Global.Dao = Empty Array;
		Global.SHIFT = Empty Array;
		Global.pinballnumber = Empty Array;
		Global.killballnumber = Empty Array;
		Global.A = Empty Array;
		Global.F = Empty Array;
		Global.G = Empty Array;
		Global.H = Empty Array;
		Global.I = Empty Array;
		Global.K = Empty Array;
		Global.J = 0;
		Global.Q = Empty Array;
		Global.TQ = Empty Array;
		Global.TQ2 = Empty Array;
		Global.EditMode = Empty Array;
		Global.TQ1 = 0;
		Global.TQ5 = Empty Array;
		Global.TQ6 = Empty Array;
		Wait(1, Ignore Condition);
		Global.B = Count Of(Global.A) - 1;
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"),
			Top, -1, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Call Subroutine(KILLBALL);
		Wait(2, Ignore Condition);
		Call Subroutine(pinball);
		If(Current Game Mode == Game Mode(Skirmish));
			Create HUD Text(All Players(All Teams), Custom String(""), Null, String("{0} {1} {2}", Custom String("距离炸房还剩"),
				270 - Round To Integer(Total Time Elapsed / 60, Down), Custom String("分钟")), Right, -11, Color(White), Color(White), Color(
				Red), Visible To and String, Default Visibility);
		Else;
			Create HUD Text(All Players(All Teams), Custom String(""), Null, String("{0} {1} {2}", Custom String("距离炸房还剩"),
				90 - Round To Integer(Total Time Elapsed / 60, Down), Custom String("分钟")), Right, -11, Color(White), Color(White), Color(Red),
				Visible To and String, Default Visibility);
		End;
		Global.save = Empty Array;
		"Top 5 best times hud text"
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Top 5 "), Right, -8, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		"1th Place"
		Create HUD Text(Global.toplistSortedTimes[1] != Null ? All Players(All Teams) : Null, Hero Icon String(Hero(Genji)),
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[1])], Custom String("{0} 秒",
			Global.toplistSortedTimes[1]), Right, -7, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		"2nd Place"
		Create HUD Text(Global.toplistSortedTimes[2] != Null ? All Players(All Teams) : Null, Hero Icon String(Hero(Genji)),
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[2])], Custom String("{0} 秒",
			Global.toplistSortedTimes[2]), Right, -6, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		"3rd Place"
		Create HUD Text(Global.toplistSortedTimes[3] != Null ? All Players(All Teams) : Null, Hero Icon String(Hero(Genji)),
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[3])], Custom String("{0} 秒",
			Global.toplistSortedTimes[3]), Right, -5, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		"4th Place"
		Create HUD Text(Global.toplistSortedTimes[4] != Null ? All Players(All Teams) : Null, Hero Icon String(Hero(Genji)),
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[4])], Custom String("{0} 秒",
			Global.toplistSortedTimes[4]), Right, -4, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		"5th Place"
		Create HUD Text(Global.toplistSortedTimes[5] != Null ? All Players(All Teams) : Null, Hero Icon String(Hero(Genji)),
			Global.toplistPlayers[Index Of Array Value(Global.toplistTimes, Global.toplistSortedTimes[5])], Custom String("{0} 秒",
			Global.toplistSortedTimes[5]), Right, -3, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187, 255), Custom Color(158,
			255, 187, 255), Visible To and String, Default Visibility);
		"Other player best times hud text"
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Other"), Right, -2, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Null, Null, Custom String("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"), Left, -2,
			Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"       无敌探点｜Ｒ+V \r\n       重新开始｜F+蹲+E\r\n       死亡观战｜长按F \r\n开关快速回城｜长按R \r\n       快速回城｜单击R\r\n"), Right, -10, Color(White),
			Color(White), Color(White), Visible To, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n源氏跑酷交流群：608291499 "),
			Left, 0, Color(White), Color(White), Color(Yellow), Visible To and String, Default Visibility);
	}
}

rule("【子程序】-【点位效果】")
{
	event
	{
		Subroutine;
		Sub0;
	}

	actions
	{
		Create Effect(Event Player, Ring, Color(Sky Blue), Count Of(Global.A[Event Player.A])
			!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], 1, Visible To Position and Radius);
		Event Player.B[0] = Last Created Entity;
		Create Effect(Event Player, Ring, Color(Lime Green), Global.A[Event Player.A + 1], 1, Visible To Position and Radius);
		Event Player.B[1] = Last Created Entity;
		Create Effect(Event Player, Light Shaft, Color(White), Global.A[Event Player.A + 1], 1, Visible To Position and Radius);
		Event Player.B[2] = Last Created Entity;
		Create Icon(Event Player, Global.A[Event Player.A + 1] + Vector(0, 1, 0), Arrow: Down, Visible To and Position, Color(Sky Blue),
			True);
		Event Player.B[3] = Last Created Entity;
		Create In-World Text(Event Player, Custom String("到这里来"), Global.A[Event Player.A + 1], 1.500, Do Not Clip,
			Visible To Position and String, Color(White), Default Visibility);
		Event Player.B[4] = Last Text ID;
	}
}

rule("【子程序】-【开始游戏】")
{
	event
	{
		Subroutine;
		Sub1;
	}

	actions
	{
		Skip If(Count Of(Global.A) == 0, 6);
		If(Array Contains(Global.save, Custom String("{0}", Event Player)) == True);
			Event Player.A = Global.save[Index Of Array Value(Global.save, Custom String("{0}", Event Player)) + 1];
			Event Player.D = Global.save[Index Of Array Value(Global.save, Custom String("{0}", Event Player)) + 2];
			Teleport(Event Player, Global.A[Global.save[Index Of Array Value(Global.save, Custom String("{0}", Event Player)) + 1]] + Vector(0,
				1, 0));
		Else;
			Teleport(Event Player, Global.A[0] + Vector(0, 1, 0));
			Event Player.A = 0;
			Event Player.D = 0;
			Modify Global Variable(save, Append To Array, Array(Custom String("{0}", Event Player), Event Player.A, Event Player.D));
		End;
		Chase Player Variable At Rate(Event Player, D, Absolute Value(9999999.000), 1, Destination and Rate);
		Event Player.G = 0;
		Event Player.H = Empty Array;
		If(Event Player.E < 1);
			Set Ability 1 Enabled(Event Player, False);
			Set Ultimate Ability Enabled(Event Player, False);
		Else;
			Set Ability 1 Enabled(Event Player, True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
		End;
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Event Player.C = 0;
	}
}

rule("【子程序】-【击杀球效果显示】")
{
	event
	{
		Subroutine;
		KILLBALL;
	}

	actions
	{
		Abort If(Global.H == Empty Array);
		Global.NANBA = 0;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[0]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 1;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[1]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 2;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[2]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 3;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[3]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 4;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[4]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 5;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[5]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 6;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[6]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 7;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[7]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 8;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[8]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 9;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[9]], Current Array Element), Sphere, Color(Blue), Global.H[Global.NANBA],
			Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 10;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[10]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 11;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[11]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 12;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[12]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 13;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[13]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 14;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[14]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 15;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[15]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 16;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[16]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 17;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[17]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 18;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[18]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 19;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[19]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 20;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[20]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 21;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[21]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 22;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[22]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 23;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[23]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 24;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[24]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 25;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[25]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 26;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[26]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 27;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[27]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 28;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[28]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 29;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[29]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 30;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[30]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 31;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[31]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 32;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[32]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 33;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[33]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 34;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[34]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 35;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[35]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 36;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[36]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 37;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[37]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 38;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[38]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 39;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[39]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 40;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[40]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 41;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[41]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 42;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[42]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 43;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[43]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 44;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[44]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 45;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[45]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 46;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[46]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 47;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[47]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 48;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[48]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 49;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[49]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
		Global.NANBA = 50;
		Create Effect(Sorted Array(Global.P[Global.killballnumber[50]], Current Array Element), Sphere, Color(Blue),
			Global.H[Global.NANBA], Global.I[Global.NANBA], Visible To);
		Modify Global Variable(K, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.H) - 1);
	}
}

rule("【子程序】-【弹球效果显示】")
{
	event
	{
		Subroutine;
		pinball;
	}

	actions
	{
		Abort If(Global.TQ == Empty Array);
		Global.NANBA = 0;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[0]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 1;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[1]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 2;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[2]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 3;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[3]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 4;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[4]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 5;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[5]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 6;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[6]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 7;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[7]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 8;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[8]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 9;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[9]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 10;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[10]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 11;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[11]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 12;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[12]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 13;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[13]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 14;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[14]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 15;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[15]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 16;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[16]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 17;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[17]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 18;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[18]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 19;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[19]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 20;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[20]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 21;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[21]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 22;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[22]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 23;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[23]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 24;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[24]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 25;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[25]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 26;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[26]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 27;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[27]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 28;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[28]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 29;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[29]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 30;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[30]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 31;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[31]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 32;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[32]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 33;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[33]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 34;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[34]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 35;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[35]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 36;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[36]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 37;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[37]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 38;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[38]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 39;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[39]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 40;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[40]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 41;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[41]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 42;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[42]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 43;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[43]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 44;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[44]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 45;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[45]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 46;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[46]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 47;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[47]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 48;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[48]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 49;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[49]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 50;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[50]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 51;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[51]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 52;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[52]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 53;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[53]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 54;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[54]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 55;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[55]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 56;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[56]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 57;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[57]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 58;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[58]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 59;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[59]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 60;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[60]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 61;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[61]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 62;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[62]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 63;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[63]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 64;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[64]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 65;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[65]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 66;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[66]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 67;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[67]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 68;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[68]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 69;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[69]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 70;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[70]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 71;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[71]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 72;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[72]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 73;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[73]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 74;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[74]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
		Global.NANBA = 75;
		Create Effect(Sorted Array(Global.P[Global.pinballnumber[75]], Current Array Element), Orb, Color(Green), Global.TQ[Global.NANBA],
			1, Visible To);
		Modify Global Variable(TQ2, Append To Array, Last Created Entity);
		Abort If(Global.NANBA == Count Of(Global.TQ) - 1);
	}
}

rule("数据录入---------------------------------------------------录入前先按 填装+互动+近战 清空多余数据再复制粘贴")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.A = Array(Vector(-93.752, 1.500, -41.891), Vector(-106.702, 1.500, -26.143), Vector(-101.908, 1.500, -7.297), Vector(
			-111.899, 1.500, -26.279), Vector(-97.496, 1.500, -9.503), Vector(-114.708, 1.500, -26.181), Vector(-99.665, 1.500, -8.095),
			Vector(-100.877, 1.500, -38.399), Vector(-96.671, 1.500, -43.230), Vector(-101.594, 1.500, -13.752), Vector(-99.770, 1.500,
			-7.375), Vector(-99.710, 1.529, -41.368));
		Global.H = Array(Vector(-123.690, 1.892, -17.470), Vector(-123.678, 1.891, -34.997), Vector(-123.749, 1.891, -17.344), Vector(
			-123.778, 1.891, -17.497), Vector(-123.753, 1.891, -35.016));
		Global.I = Array(2.300, 2.300, 2.300, 2.300, 2.300);
		Global.TQ = Array();
		Global.EditMode = Array();
		Global.TQ5 = Array();
		Global.TQ6 = Array();
		Global.killballnumber = Array(6, 8, 8, 10, 10);
		Global.pinballnumber = Array();
		Global.BAN = Array(Custom String(""), Custom String(""), Custom String(""), Custom String(""), Custom String(""), Custom String(
			""));
	}
}

rule("开局设置")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Set Damage Dealt(Event Player, 0);
		If(Array Contains(Global.Q, Event Player) == False);
			Create HUD Text(Event Player, Null, Null, String("{0} {1}", Custom String("当前关卡"), String("{0} / {1}", Event Player.A, Count Of(
				Global.A) - 1)), Top, -4, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
			Create HUD Text(Event Player, Null, Null, String("{0} {1}", Custom String("时间"), String("{0} sec", Event Player.D)), Left, -2,
				Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		End;
		Modify Global Variable(Q, Append To Array, Event Player);
		"子程序1为游戏的初始化设置"
		Call Subroutine(Sub1);
		Enable Death Spectate All Players(Event Player);
		Enable Death Spectate Target HUD(Event Player);
		"玩家F：自杀防止复活"
		Event Player.F = 0;
		"玩家I：教程HUD"
		Event Player.I = 2;
		"玩家J：爬墙提示HUD"
		Event Player.J = 2;
		"子程序0为检查点效果显示"
		Call Subroutine(Sub0);
	}
}

rule("抵达检查点")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 1.400;
		Event Player.A < Count Of(Global.A) - 1;
		Is On Ground(Event Player) == True;
		(Event Player.E >= 1 || Event Player.C == 0) == True;
	}

	actions
	{
		Event Player.A += 1;
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
			+ 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
			+ 1);
		Modify Global Variable(save, Remove From Array By Value, Custom String("{0}", Event Player));
		Modify Global Variable(save, Append To Array, Array(Custom String("{0}", Event Player), Event Player.A, Event Player.D));
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 100);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Global.A[Event Player.A] + Vector(0, 1.500, 0), 4);
		Big Message(Event Player, String("{0} {1}", Custom String("已抵达"), String("{0} / {1}", Event Player.A, Count Of(Global.A) - 1)));
		Modify Global Variable At Index(P, Event Player.A, Append To Array, Event Player);
		Modify Global Variable At Index(P, Event Player.A - 1, Remove From Array By Value, Event Player);
		If(Event Player.E < 1);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
		End;
		Abort If(Event Player.E >= 1);
		If(Event Player.A >= Count Of(Global.A) - 1);
			Set Ability 1 Enabled(Event Player, True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Stop Chasing Player Variable(Event Player, D);
			Big Message(All Players(All Teams), String("{0} {1} {2}", Event Player, Custom String("已通关！所用时间"), String("{0} sec",
				Event Player.D)));
			Destroy Effect(Event Player.B[0]);
			Destroy Effect(Event Player.B[1]);
			Destroy Effect(Event Player.B[2]);
			Destroy Icon(Event Player.B[3]);
			Destroy In-World Text(Event Player.B[4]);
			"F传送门开关"
			Modify Global Variable(F, Append To Array, Event Player);
			"G传送门开关"
			Modify Global Variable(G, Append To Array, Event Player);
			"H传送门字符串"
			Event Player.H = 2;
		End;
	}
}

rule("显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		"空白处填写您好友的名字"
		If(Custom String("五里雾中") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("萌新"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("Crazydouzi") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("猛 男豆子"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("淡风盈晓") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("3055"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("南烟吹北枳") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("北 老婆"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("柠萌") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("萌萌萌萌妹子(●'◡'●)"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("太阳的黑子") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("小 菜 鸡"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("翎马") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("宝马"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("喵喵酱") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("网恋教母"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(Custom String("火锅") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("重庆火锅"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("She") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("陈少来了！"));
			Create In-World Text(All Players(All Teams), Custom String("まだまだ"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("淮北也生橘") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("那个小可爱来了！"));
			Create In-World Text(All Players(All Teams), Custom String("SHE的父皇"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("半藏他女朋友") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("茶茶"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("小樱") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("樱桃小丸子"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("余不乐") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("查无此人"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("泠鸢") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("RGB少年来了"));
			Create In-World Text(All Players(All Teams), Custom String("ラストドール・エクスターミネーター"), Event Player, 1.300, Clip Against Surfaces,
				Visible To Position and String, Color(Gray), Default Visibility);
		Else If(Custom String("从未手软") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("小甜兔来了~"));
			Create In-World Text(All Players(All Teams), Custom String("小甜兔"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("小小柚子") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("可爱的柚子来啦~"));
			Create In-World Text(All Players(All Teams), Custom String("炒鸡无敌可爱的柚子吖~"), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(Custom String("雪夜月音") == Custom String("{0}", Event Player));
			Create In-World Text(All Players(All Teams), Custom String("Hanser小天使"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("雾月屿枝") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("阴阳人来了"));
			Create In-World Text(All Players(All Teams), Custom String("阴阳带师"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		Else If(Custom String("猫汐") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("无敌可爱的猫汐来啦~"));
			Create In-World Text(All Players(All Teams), Custom String("炒鸡无敌可爱的猫汐吖~"), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(Custom String("羽然") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("睡宝的爸爸来了！"));
			Create In-World Text(All Players(All Teams), Custom String("睡宝之爹"), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(Custom String("想被你睡") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("卡小总冠军来了！"));
			Create In-World Text(All Players(All Teams), Custom String("卡小总冠军♥"), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Rose), Default Visibility);
		Else If(Custom String("麦月十四") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("有人进来坐牢啦！"));
			Create In-World Text(All Players(All Teams), Custom String("（⊙﹏⊙）"), Event Player, 1.800, Clip Against Surfaces,
				Visible To Position and String, Color(Yellow), Default Visibility);
		End;
	}
}

rule("球体伤害")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(Event Player,
			Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[0])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[1])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[2])
			] == Event Player.A || Global.killballnumber[Index Of Array Value(Global.H, Filtered Array(Global.H, Distance Between(
			Event Player, Current Array Element) <= Global.I[Index Of Array Value(Global.H, Current Array Element)])[3])
			] == Event Player.A) == True;
		Event Player.A != 0;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.C == 0;
	}

	actions
	{
		Kill(Event Player, Null);
	}
}

rule("弹球")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Global.pinballnumber[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Event Player,
			Current Array Element) <= 1.200))] == Event Player.A) == True;
		Event Player.A != 0;
	}

	actions
	{
		Apply Impulse(Event Player, Up, Global.EditMode[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))], To World, Cancel Contrary Motion);
		disabled Set Ability 1 Enabled(Event Player, Global.TQ6[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))]);
		disabled Set Ultimate Ability Enabled(Event Player, Global.TQ5[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(
			Position Of(Event Player), Current Array Element) <= 2))]);
		If(Global.TQ6[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Position Of(Event Player),
			Current Array Element) <= 2))] == True);
			Set Ability 1 Enabled(Event Player, True);
			Small Message(Event Player, Custom String("SHIFT技能已开启"));
		End;
		If(Global.TQ5[Index Of Array Value(Global.TQ, Filtered Array(Global.TQ, Distance Between(Position Of(Event Player),
			Current Array Element) <= 2))] == True);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Small Message(Event Player, Custom String("终极技能已开启"));
		End;
	}
}

rule("通关成绩显示")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Event Player.A == Count Of(Global.A) - 1;
		Event Player.E < 1;
	}

	actions
	{
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
			+ 1);
		Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
			+ 1);
		Modify Global Variable(save, Remove From Array By Value, Custom String("{0}", Event Player));
		If(Event Player.B[7] == Null);
			Event Player.T = Event Player.D;
			Create HUD Text(Array Contains(Global.toplistSortedTimes, Global.toplistTimes[Index Of Array Value(Global.toplistPlayers,
				Custom String("{0}", Event Player))]) == True ? Null : All Players(All Teams), Hero Icon String(Hero(Genji)), Event Player,
				Custom String("{0} 秒", Event Player.T), Right, Event Player.T, Custom Color(158, 255, 187, 255), Custom Color(158, 255, 187,
				255), Custom Color(158, 255, 187, 255), Visible To Sort Order and String, Default Visibility);
			Event Player.B[7] = Last Text ID;
		Else;
			Skip If(Event Player.D > Event Player.T, 1);
			Event Player.T = Event Player.D;
		End;
		"Save data for the Top 5 list"
		If(Array Contains(Global.toplistPlayers, Custom String("{0}", Event Player)) == True);
			Skip If(Event Player.D >= Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, Custom String("{0}", Event Player))], 1);
			Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, Custom String("{0}", Event Player))] = Event Player.D;
		Else;
			Modify Global Variable(toplistPlayers, Append To Array, Custom String("{0}", Event Player));
			Global.toplistTimes[Index Of Array Value(Global.toplistPlayers, Custom String("{0}", Event Player))] = Event Player.D;
		End;
		"Reload the Sorted Array Times"
		Global.toplistSortedTimes = Array Slice(Sorted Array(Global.toplistTimes, Current Array Element), 0, 6);
	}
}

rule("通关波浪特效")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A == Count Of(Global.A) - 1;
		Event Player.E < 1;
		Is Moving(Event Player) == True;
		disabled (Is Moving(Event Player) == True || Is Button Held(Event Player, Button(Jump)) == True) == True;
	}

	actions
	{
		Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Position Of(Event Player), 1.600);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Position Of(Event Player), 1.400);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Purple), Position Of(Event Player), 1.200);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Position Of(Event Player), 1);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Position Of(Event Player), 0.800);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Aqua), Position Of(Event Player), 0.600);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Orange), Position Of(Event Player), 0.400);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Position Of(Event Player), 0.200);
		Wait(0.350, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("死亡传送")
{
	event
	{
		Player Died;
		All;
		All;
	}

	conditions
	{
		Event Player.F != 1;
		Count Of(Global.A) >= 2;
	}

	actions
	{
		Clear Status(Event Player, Phased Out);
		Resurrect(Event Player);
		Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
	}
}

rule("落地传送——————————— 制作球型跑酷图时，关闭此条规则，需要融合球型、点型二者的则不用 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		(Distance Between(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A])
			> 1.400 || False) == True;
		(Is On Ground(Event Player) == True || False) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Count Of(Global.A) >= 2;
		Event Player.C != 1;
		Event Player.F != 1;
		"做特定关卡开启落地死亡再打开"
		disabled (Event Player.A == -1 || Event Player.A == -1 || Event Player.A == -1 || False) == True;
	}

	actions
	{
		If(Event Player.E < 1);
			Set Ability 1 Enabled(Event Player, False);
			Set Ultimate Ability Enabled(Event Player, False);
		End;
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
		Set Status(Event Player, Null, Rooted, 0.100);
		Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
		If(Global.deathjump == True);
			Disallow Button(Event Player, Button(Jump));
			Wait(0.100, Ignore Condition);
			Allow Button(Event Player, Button(Jump));
		End;
		If(Event Player.A == 0);
			Event Player.D = 0;
		End;
	}
}

rule("消散")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Has Status(Event Player, Phased Out) == False;
	}

	actions
	{
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
	}
}

rule("重跑")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Ability 2)) == True;
	}

	actions
	{
		If(Array Contains(Global.save, Custom String("{0}", Event Player)) == True);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
				+ 1);
			Modify Global Variable(save, Remove From Array By Index, Index Of Array Value(Global.save, Custom String("{0}", Event Player))
				+ 1);
			Modify Global Variable(save, Remove From Array By Value, Custom String("{0}", Event Player));
		End;
		Modify Global Variable At Index(P, Event Player.A, Remove From Array By Value, Event Player);
		If(Event Player.A >= Count Of(Global.A) - 1);
			Call Subroutine(Sub0);
			"这条动作为“消除玩家通关成绩显示”"
			Destroy HUD Text(Event Player.B[7]);
			"效果B5.B6代表的是光环通关特效，需保持和规则“通关特效”同步开启/关闭"
			disabled Destroy Effect(Event Player.B[5]);
			disabled Destroy Effect(Event Player.B[6]);
		End;
		Call Subroutine(Sub1);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 100);
		Modify Global Variable(F, Remove From Array By Value, Event Player);
		Modify Global Variable(G, Remove From Array By Value, Event Player);
	}
}

rule("自杀观战")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Event Player.E < 1;
	}

	actions
	{
		Wait(1, Abort When False);
		Small Message(Event Player, Custom String("长按互动1秒开启/关闭观战"));
		If(Is Alive(Event Player) == True);
			Set Respawn Max Time(Event Player, 9999);
			Event Player.F = 1;
			Stop Chasing Player Variable(Event Player, D);
			Wait(0.200, Ignore Condition);
			Kill(Event Player, Null);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
		Else;
			Skip If(Event Player.E >= 1, 2);
			Respawn(Event Player);
			Event Player.F = 0;
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Skip If(Event Player.A >= Count Of(Global.A) - 1, 3);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Chase Player Variable At Rate(Event Player, D, 10000, 1, Destination and Rate);
			Set Respawn Max Time(Event Player, 0);
			Event Player.C = 0;
		End;
	}
}

rule("二段跳，小跳初始化")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		"变量A后的数字“-1”为关卡数，具体操作参考“给刀”。此条规则开启效果为“特定关卡开启三段”，关闭则为“所有关卡封禁三段”"
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		"注释一定要看！此条条件开启的效果为“通关后自动开启三段”，关闭则通关后仍封禁三段"
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY = 0;
		Event Player.J = 2;
		Wait(0, Ignore Condition);
		Loop If((Event Player.TY != 0 || Event Player.J != 2) && Is On Ground(Event Player) == True);
		Event Player.O = 1;
	}
}

rule("跳跃判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player.TY != 2;
		"变量A后的数字“-1”为关卡数，具体操作参考“给刀”。此条规则开启效果为“特定关卡开启三段”，关闭则为“所有关卡封禁三段"
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		"注释一定要看！此条条件开启的效果为“通关后自动开启三段”，关闭则通关后仍封禁三"
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY += 1;
	}
}

rule("踏空小跳判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.TY == 0;
		Is In Air(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
	}

	actions
	{
		Event Player.O = 0;
	}
}

rule("踏空")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Event Player.TY == 0;
		Is In Air(Event Player) == True;
		"变量A后的数字“-1”为关卡数，具体操作参考“给刀”。此条规则开启效果为“特定关卡开启三段”，关闭则为“所有关卡封禁三段"
		disabled (Event Player.A != -1 || Event Player.A != -1 || False) == True;
		"注释一定要看！此条条件开启的效果为“通关后自动开启三段”，关闭则通关后仍封禁三"
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		Event Player.TY = 1;
	}
}

rule("三段精准判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.TY == 1;
	}

	actions
	{
		Wait(0.100, Abort When False);
		Event Player.TY = 2;
	}
}

rule("玩家在墙上")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"此条规则同时与爬墙判定挂钩，请勿关闭/删除"
		Is On Wall(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
	}

	actions
	{
		Event Player.TY = 2;
		Event Player.J = 1;
	}
}

rule("探点")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Using Ability 1(Event Player) == False;
		Event Player.A < Count Of(Global.A) - 1;
		Is Alive(Event Player) == True;
		Is Using Ultimate(Event Player) == False;
	}

	actions
	{
		Start Forcing Player Position(Event Player, Count Of(Global.A[Event Player.A])
			!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], True);
		If(Event Player.C == 0);
			Stop Chasing Player Variable(Event Player, D);
			Big Message(Event Player, Custom String("已解除地面限制"));
			Stop Forcing Player Position(Event Player);
			Set Ultimate Ability Enabled(Event Player, True);
			Set Ultimate Charge(Event Player, 100);
			Set Ability 1 Enabled(Event Player, True);
			Wait(0.200, Ignore Condition);
			Event Player.C = 1;
		Else;
			Skip If(Event Player.E >= 1, 2);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Wait(0.100, Ignore Condition);
			Event Player.C = 0;
			Big Message(Event Player, Custom String("已开启地面限制"));
			Chase Player Variable At Rate(Event Player, D, Absolute Value(9999999.000), 1, Destination and Rate);
			Stop Forcing Player Position(Event Player);
		End;
	}
}

rule("刀充能")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Ultimate Charge Percent(Event Player) < 100;
	}

	actions
	{
		Set Ultimate Charge(Event Player, 100);
	}
}

rule("表情小跳判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating Any Emote(Event Player) == True;
	}

	actions
	{
		Event Player.O = 0;
	}
}

rule("小跳使用判定")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.O == 0;
		Is Jumping(Event Player) == True;
	}

	actions
	{
		Event Player.O = 1;
		Small Message(Event Player, Custom String("小跳已用"));
	}
}

rule("玩家离开比赛")
{
	event
	{
		Player Left Match;
		All;
		All;
	}

	actions
	{
		Modify Global Variable(Q, Remove From Array By Value, Event Player);
	}
}

rule("爬墙未用HUD")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == 2;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Destroy HUD Text(Event Player.paqiang);
		Create HUD Text(Event Player, Custom String("爬墙未用"), Null, Null, Left, -1, Color(Orange), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Event Player.paqiang = Last Text ID;
	}
}

rule("爬墙已用HUD")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == 1;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Destroy HUD Text(Event Player.paqiang);
		Create HUD Text(Event Player, Custom String("爬墙已用"), Null, Null, Left, -1, Color(Red), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Event Player.paqiang = Last Text ID;
	}
}

rule("卡小跳判定 感谢Githuboy#5249")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == False;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
		Is On Ground(Event Player) == False;
		Is In Air(Event Player) == True;
		Is Jumping(Event Player) == False;
		Is Crouching(Event Player) == True;
	}

	actions
	{
		Small Message(Event Player, Custom String("Success"));
		Event Player.O = 0;
		If(Global.kaxiaotiao == True);
			Kill(Event Player, Null);
			Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), Custom String("：卡小跳已禁用")));
		End;
	}
}

rule("快速回城")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
	}

	actions
	{
		Abort If(Is Button Held(Event Player, Button(Melee)) == True);
		If(Event Player.quick_restart == True);
			Start Forcing Player Position(Event Player, Count Of(Global.A[Event Player.A])
				!= 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A], True);
			Skip If(Event Player.E >= 1 || Event Player.C == 1, 2);
			Set Ultimate Ability Enabled(Event Player, False);
			Set Ability 1 Enabled(Event Player, False);
			Teleport(Event Player, Count Of(Global.A[Event Player.A]) != 0 ? Global.A[Event Player.A][1] : Global.A[Event Player.A]);
			Wait(0.100, Ignore Condition);
			Stop Forcing Player Position(Event Player);
		End;
		Wait(1, Abort When False);
		If(Event Player.quick_restart == False);
			Event Player.quick_restart = True;
			Big Message(Event Player, Custom String("快速回城已开启"));
			Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 100);
		Else If(Event Player.quick_restart == True);
			Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 100);
			Event Player.quick_restart = False;
			Big Message(Event Player, Custom String("快速回城已关闭"));
		End;
	}
}

rule("限制刀———— 无须更改 ———————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		"此条规则作用为：在跑图时令SHIFT只能使用一次"
		Is Using Ultimate(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.E < 1;
		Event Player.C == 0;
	}

	actions
	{
		Set Ultimate Ability Enabled(Event Player, False);
	}
}

rule("限制shift———无须更改 ————————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"此条规则作用为：在跑图时令SHIFT只能使用一次"
		Is Using Ability 1(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Event Player.E < 1;
		Event Player.C == 0;
	}

	actions
	{
		Set Ability 1 Enabled(Event Player, False);
	}
}

rule("给刀—————无须更改 —————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Distance Between(Event Player, Count Of(Global.A[Event Player.A]) > 1 ? Last Of(Global.A[Event Player.A])
			: Global.A[Event Player.A]) <= 1.400;
		Array Contains(Global.Dao, Event Player.A) == True;
		Is Using Ultimate(Event Player) == False;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Abort If(Is Using Ultimate(Event Player) == True);
		Set Ultimate Ability Enabled(Event Player, True);
		Set Ultimate Charge(Event Player, 100);
		Small Message(Event Player, Custom String("终极技能已开启"));
	}
}

rule("给shift————无须更改 —————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Ground(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		disabled Distance Between(Event Player, Global.A[Event Player.A]) <= 1.400;
		Distance Between(Event Player, Count Of(Global.A[Event Player.A]) > 1 ? Last Of(Global.A[Event Player.A])
			: Global.A[Event Player.A]) <= 1.400;
		Array Contains(Global.SHIFT, Event Player.A) == True;
		Is Using Ability 1(Event Player) == False;
	}

	actions
	{
		Set Ability 1 Enabled(Event Player, True);
		Small Message(Event Player, Custom String("SHIFT技能已开启"));
	}
}

rule("———————————————— 以下灰色的功能，需要用时再另行设置 ————————————————")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("刀关卡设置——————————— 将“-1”修改为给刀关卡数即可 ——————————")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"需要添加关卡将“-1”修改为关卡数即可"
		Global.Dao = Array(Empty Array, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
	}
}

disabled rule("SHIFT关卡设置————————— 将“-1”修改为给shift关卡数即可 ——————————")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"需要添加关卡将“-1”修改为关卡数即可"
		Global.SHIFT = Array(Empty Array, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
	}
}

disabled rule("传送门1-2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"将矢量（0，0，0）修改为开始的传送位置"
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		"将“-1”修改为传送门关卡的关卡数"
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		"将矢量（0，0，0）修改为传送结束的位置"
		disabled Teleport(Event Player, Vector(0, 0, 0));
		"不想找坐标的，直接传送到关卡0"
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("传送门2-3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"将矢量（0，0，0）修改为开始的传送位置"
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		"将“-1”修改为传送门关卡的关卡数"
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		"将矢量（0，0，0）修改为传送结束的位置"
		disabled Teleport(Event Player, Vector(0, 0, 0));
		"不想找坐标的，直接传送到关卡0"
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("传送门3-1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"将矢量（0，0，0）修改为开始的传送位置"
		Distance Between(Event Player, Vector(0, 0, 0)) <= 1.400;
		"将“-1”修改为传送门关卡的关卡数"
		(Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		"将矢量（0，0，0）修改为传送结束的位置"
		disabled Teleport(Event Player, Vector(0, 0, 0));
		"不想找坐标的，直接传送到关卡0"
		disabled Teleport(Event Player, Global.A[0]);
	}
}

disabled rule("特定关卡可见的地图文本")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		disabled Create In-World Text(Sorted Array(Global.P[0], Current Array Element), Custom String("我是0关的文本"), Vector(0, 0, 0), 1.200,
			Clip Against Surfaces, Visible To Position and String, Color(Orange), Default Visibility);
		disabled Create In-World Text(Sorted Array(Global.P[1], Current Array Element), Custom String("我是01关的文本"), Vector(0, 0, 0), 1.200,
			Clip Against Surfaces, Visible To Position and String, Color(Orange), Default Visibility);
		disabled Create In-World Text(Sorted Array(Global.P[2], Current Array Element), Custom String("我是02关的文本"), Vector(0, 0, 0), 3,
			Clip Against Surfaces, Visible To Position and String, Color(Orange), Default Visibility);
	}
}

disabled rule("指定关卡可见HUD文本")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		disabled Create HUD Text(Sorted Array(Global.P[0], Current Array Element), Custom String("我是第0关文本"), Null, Null, Top, -4, Color(Red), Color(
			White), Color(White), Visible To and String, Default Visibility);
		disabled Create HUD Text(Sorted Array(Global.P[1], Current Array Element), Custom String("我是第1关文本"), Null, Null, Top, -4, Color(Red), Color(
			White), Color(White), Visible To and String, Default Visibility);
		disabled Create HUD Text(Sorted Array(Global.P[2], Current Array Element), Custom String("我是第2关文本"), Null, Null, Top, -4, Color(Red), Color(
			White), Color(White), Visible To and String, Default Visibility);
	}
}

disabled rule("地图文本")
{
	event
	{
		Ongoing - Global;
	}
}

rule("DVA点位——————DVA炸栏杆请手动添加坐标点位")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.DVA = Empty Array;
		Global.dva = 0;
		"点击这个摄像头就能录入玩家当前的位置"
		Modify Global Variable(DVA, Append To Array, Vector(-121.342, 3.200, -23.295));
		Modify Global Variable(DVA, Append To Array, Vector(-121.495, 3.200, -29.945));
		Modify Global Variable(DVA, Append To Array, Vector(-111.852, 4.115, -35.169));
		"点击这个摄像头就能录入玩家当前的位置"
		Modify Global Variable(DVA, Append To Array, Vector(-111.642, 4.115, -17.692));
	}
}

rule("召唤DVA")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.dva == 0;
		Count Of(All Players(Team 2)) < 6;
	}

	actions
	{
		Create Dummy Bot(Hero(D.Va), Team 1, 5, Global.DVA[Global.dva], Up);
		Global.dva += 1;
		Start Holding Button(Players On Hero(Hero(D.Va), All Teams), Button(Ultimate));
		Wait(7.500, Ignore Condition);
		Loop If(Global.dva < Count Of(Global.DVA));
		Stop Holding Button(Players On Hero(Hero(D.Va), All Teams), Button(Ultimate));
		Destroy Dummy Bot(Team 1, 5);
	}
}

disabled rule("传送门显示——可变字体")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		"将矢量（0，0，0）修改为传送门1-2入口的坐标"
		Create In-World Text(Event Player, Custom String("{{0}}", Event Player.H, Custom String("传送至下一目标"), Custom String("至图二")), Vector(
			276.288, -17.222, -74.522), 1.500, Clip Against Surfaces, Visible To Position and String, Color(Yellow), Default Visibility);
		"将矢量（1，1，1）修改为2-3传送门的入口位置"
		Create In-World Text(Event Player, Custom String("{{0}}", Event Player.H, Custom String("传送至下一目标"), Custom String("至图三")), Vector(
			1, 1, 1), 1.500, Clip Against Surfaces, Visible To Position and String, Color(Yellow), Default Visibility);
	}
}

disabled rule("传送门显示——光环及光柱及不可变“至图一”字体")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"传送门1-2的显示效果"
		Create Effect(Global.F, Ring, Color(Lime Green), Vector(0, 0, 0), 1, Visible To Position and Radius);
		"传送门1-2的显示效果"
		Create Effect(Global.F, Light Shaft, Color(Red), Vector(276.288, -17.222, -74.522), 1, Visible To Position and Radius);
		"传送门2-3的显示效果"
		Create Effect(Global.G, Ring, Color(Lime Green), Vector(1, 1, 1), 1, Visible To Position and Radius);
		"传送门2-3的显示效果"
		Create Effect(Global.G, Light Shaft, Color(Red), Vector(1, 1, 1), 1, Visible To Position and Radius);
		"传送门3-1的显示效果"
		Create Effect(Global.F, Ring, Color(Lime Green), Vector(2, 2, 2), 1, Visible To Position and Radius);
		"传送门3-1的显示效果"
		Create Effect(Global.F, Light Shaft, Color(Red), Vector(2, 2, 2), 1, Visible To Position and Radius);
		"将矢量（0，0，0）修改为传送门3-1的入口坐标"
		Create In-World Text(Global.F, Custom String("至图一"), Vector(0, 0, 0), 1.500, Clip Against Surfaces, Visible To Position and String,
			Color(Yellow), Default Visibility);
	}
}

disabled rule("开启传送门视野—————————— 特定关卡时开启 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"将“-1”分别改为两个传送门所在关卡的关卡数"
		(Event Player.A == -1 || Event Player.A == -1 || Event Player.A >= Count Of(Global.A) - 1) == True;
	}

	actions
	{
		Event Player.H = 1;
		"将“-1”修改为第一个传送门所在的关卡数"
		If(Event Player.A == -1);
			Modify Global Variable(F, Append To Array, Event Player);
		"将“-2”修改为第二个传送门所在的关卡数"
		Else If(Event Player.A == -2);
			Modify Global Variable(G, Append To Array, Event Player);
		"无需更改"
		Else If(Event Player.A >= Count Of(Global.A) - 1);
			Modify Global Variable(G, Append To Array, Event Player);
			Modify Global Variable(F, Append To Array, Event Player);
			Event Player.H = 2;
		End;
	}
}

disabled rule("关闭传送门视野—————————— 特定关卡时关闭 ————————————")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"将“-2”分别修改为两个传送门传送过去后的关卡数"
		(Event Player.A == -2 || Event Player.A == -2 || False) == True;
	}

	actions
	{
		Event Player.H = 0;
		"将此处的“-2”修改为第一个传送门传送过去之后的关卡数"
		If(Event Player.A == -2);
			Modify Global Variable(F, Remove From Array By Value, Event Player);
		"将此处的“-2”修改为第二个传送门传送过去之后的关卡数"
		Else If(Event Player.A == -2);
			Modify Global Variable(G, Remove From Array By Value, Event Player);
		End;
	}
}

rule("作者名字在这输入")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"                        作者：Hunter \r\n   B站教程与代码（看简介）：Hunter_Corps"), Top, -3, Color(Sky Blue), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("好友称号")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		"空白处填写您好友的名字"
		If(Custom String("【在这里填好友的名字】") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("【在这里填进场文字】"));
			Create In-World Text(All Players(All Teams), Custom String("【在这里填称号】"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		End;
		"空白处填写您好友的名字"
		If(Custom String("【在这里填好友的名字】") == Custom String("{0}", Event Player));
			Big Message(All Players(All Teams), Custom String("【在这里填进场文字】"));
			Create In-World Text(All Players(All Teams), Custom String("【在这里填称号】"), Event Player, 1.500, Clip Against Surfaces,
				Visible To Position and String, Color(Orange), Default Visibility);
		End;
	}
}

rule("------------------------------------开启/关闭扩展功能请前往地图工坊设置，以下规则请勿关闭------------------------------------------")
{
	event
	{
		Ongoing - Global;
	}
}

rule("三段封禁")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Vertical Speed Of(Event Player) >= 5.800;
		Event Player.TY == 1;
		Is Using Ability 1(Event Player) == False;
		Workshop Setting Toggle(Custom String("封禁开关"), Custom String("封禁三段"), False, 0) == True;
	}

	actions
	{
		Abort If(Is On Wall(Event Player) == True);
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
	}
}

rule("封蹭墙")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == True;
		Is Button Held(Event Player, Button(Jump)) == False;
		Event Player.J == 2;
		Workshop Setting Toggle(Custom String("封禁开关"), Custom String("封禁蹭墙"), False, 1) == True;
	}

	actions
	{
		Apply Impulse(Event Player, Down, Speed Of(Event Player), To Player, Cancel Contrary Motion);
		Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), Custom String("：蹭墙已禁用")));
	}
}

rule("封卡小跳")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Workshop Setting Toggle(Custom String("封禁开关"), Custom String("封禁卡小"), False, 2) == True;
	}

	actions
	{
		Global.kaxiaotiao = True;
	}
}

rule("封表情小跳")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating Any Emote(Event Player) == True;
		Event Player.A < Count Of(Global.A) - 1;
		Workshop Setting Toggle(Custom String("封禁开关"), Custom String("封禁表情跳"), False, 3) == True;
	}

	actions
	{
		Kill(Event Player, Null);
		Small Message(Event Player, String("{0} {1}", Hero Icon String(Hero(Genji)), Custom String("：表情已禁用")));
	}
}

rule("封死亡小跳")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Workshop Setting Toggle(Custom String("封禁开关"), Custom String("封禁死亡小跳"), False, 4) == True;
	}

	actions
	{
		Global.deathjump = True;
	}
}

rule("扩展: 系統跳強化（原作：家里有妖怪#5202）  效果：增强系統跳的判定（更容易卡出系統跳了）以及力度（跳得更远）")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
		(Vertical Speed Of(Event Player) >= -0.200 && Vertical Speed Of(Event Player) <= 0.050) == True;
		Horizontal Speed Of(Event Player) <= 1.300;
		Is In Air(Event Player) == True;
		Is On Wall(Event Player) == False;
		Is On Ground(Event Player) == False;
		Workshop Setting Toggle(Custom String("扩展功能"), Custom String("系统跳强化  by：家里有妖怪#5202"), False, 0) == True;
	}

	actions
	{
		Wait(0.250, Abort When False);
		Start Forcing Player Position(Event Player, Position Of(Event Player), False);
		Wait Until(Is Moving(Event Player) == False, 10);
		Stop Forcing Player Position(Event Player);
		Set Move Speed(Event Player, 0);
		Set Gravity(Event Player, 0);
		Wait(3, Ignore Condition);
		Set Gravity(Event Player, 100);
		Set Move Speed(Event Player, 100);
		Apply Impulse(Event Player, Up, 10, To World, Cancel Contrary Motion);
		Loop If Condition Is True;
	}
}

rule("扩展：爬墙刷新二段（喵喵酱#51379）效果：玩家在爬墙后刷新二段跳（扒墙蹭墙都不会刷新）")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is On Wall(Event Player) == True;
		Workshop Setting Toggle(Custom String("扩展功能"), Custom String("爬墙刷新二段  by：喵喵酱#51379"), False, 1) == True;
	}

	actions
	{
		Wait(0.250, Abort When False);
		Wait Until(Is On Wall(Event Player) == False, 1);
		Set Status(Event Player, Null, Hacked, 0.100);
		Wait(0.100, Ignore Condition);
		Clear Status(Event Player, Hacked);
	}
}

rule("扩展：留爬进点(TITANXPASCAL#5554)*记得创建文本提示玩家")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 2;
		Workshop Setting Toggle(Custom String("扩展功能"), Custom String("留爬进点 by：TITANXPASCAL#5554"), False, 2) == True;
		"将\"-1\"修改为需要留爬进点的关卡数"
		Array Contains(Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1), Event Player.A) == True;
		"如要所有关卡留爬，开启此规则，关闭\"数组包含\"的规则"
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		If(Event Player.J == 1);
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("未达成通关条件：留爬"));
		End;
	}
}

rule("扩展：留小跳进点(TITANXPASCAL#5554)*记得创建文本提示玩家")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Event Player, Global.A[Event Player.A + 1]) <= 2;
		Workshop Setting Toggle(Custom String("扩展功能"), Custom String("留小跳进点 by：TITANXPASCAL#5554"), False, 3) == True;
		"将\"-1\"修改为需要留小跳进点的关卡数"
		Array Contains(Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1), Event Player.A) == True;
		"如要所有关卡留小跳，开启此规则，关闭\"数组包含\"的规则"
		disabled Event Player.A < Count Of(Global.A) - 1;
	}

	actions
	{
		If(Event Player.O == 1);
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("未达成通关条件：留小跳"));
		End;
	}
}

rule("[Global]Setup Blacklist")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.BAN = Empty Array;
		Global.BAN = Array(Custom String(""), Custom String(""), Custom String(""), Custom String(""), Custom String(""), Custom String(
			""));
	}
}

rule("[Player]Remove Player from Blacklist")
{
	event
	{
		Player Joined Match;
		All;
		All;
	}

	conditions
	{
		Array Contains(Global.BAN, Custom String("{0}", Event Player)) == True;
	}

	actions
	{
		Remove Player(Event Player);
	}
}